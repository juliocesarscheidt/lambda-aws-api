2021/04/02 17:59:03 [INFO] Terraform version: 0.12.26  
2021/04/02 17:59:03 [INFO] Go runtime version: go1.12.13
2021/04/02 17:59:03 [INFO] CLI args: []string{"/usr/bin/terraform", "apply", "-auto-approve"}
2021/04/02 17:59:03 [DEBUG] Attempting to open CLI config file: /root/.terraformrc
2021/04/02 17:59:03 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021/04/02 17:59:03 [INFO] CLI command args: []string{"apply", "-auto-approve"}
2021/04/02 17:59:03 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021/04/02 17:59:03 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021/04/02 17:59:03 [DEBUG] New state was assigned lineage "5f75fef5-d735-3aea-81eb-477b68cead0c"
2021/04/02 17:59:03 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021/04/02 17:59:03 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021/04/02 17:59:03 [DEBUG] checking for provider in "."
2021/04/02 17:59:03 [DEBUG] checking for provider in "/usr/bin"
2021/04/02 17:59:03 [DEBUG] checking for provider in ".terraform/plugins/linux_amd64"
2021/04/02 17:59:03 [DEBUG] found provider "terraform-provider-aws_v3.30.0_x5"
2021/04/02 17:59:03 [DEBUG] found provider "terraform-provider-random_v3.1.0_x5"
2021/04/02 17:59:03 [DEBUG] found valid plugin: "aws", "3.30.0", "/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5"
2021/04/02 17:59:03 [DEBUG] found valid plugin: "random", "3.1.0", "/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5"
2021/04/02 17:59:03 [DEBUG] checking for provisioner in "."
2021/04/02 17:59:03 [DEBUG] checking for provisioner in "/usr/bin"
2021/04/02 17:59:03 [DEBUG] checking for provisioner in ".terraform/plugins/linux_amd64"
2021/04/02 17:59:03 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021/04/02 17:59:03 [INFO] backend/local: starting Apply operation
2021/04/02 17:59:03 [TRACE] backend/local: requesting state manager for workspace "default"
2021/04/02 17:59:03 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021/04/02 17:59:03 [TRACE] backend/local: requesting state lock for workspace "default"
2021/04/02 17:59:03 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2021/04/02 17:59:03 [TRACE] statemgr.Filesystem: existing snapshot has lineage "53db91f2-cfcc-13f9-e09e-59cff31f153a" serial 28
2021/04/02 17:59:03 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2021/04/02 17:59:03 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2021/04/02 17:59:03 [TRACE] backend/local: reading remote state for workspace "default"
2021/04/02 17:59:03 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2021/04/02 17:59:03 [TRACE] statemgr.Filesystem: read snapshot with lineage "53db91f2-cfcc-13f9-e09e-59cff31f153a" serial 28
2021/04/02 17:59:03 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2021/04/02 17:59:03 [TRACE] backend/local: building context for current working directory
2021/04/02 17:59:03 [TRACE] terraform.NewContext: starting
2021/04/02 17:59:03 [TRACE] terraform.NewContext: resolving provider version selections
2021/04/02 17:59:04 [TRACE] terraform.NewContext: loading provider schemas
2021/04/02 17:59:04 [TRACE] LoadSchemas: retrieving schema for provider type "aws"
2021-04-02T17:59:04.487-0300 [INFO]  plugin: configuring client automatic mTLS
2021-04-02T17:59:04.594-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5]
2021-04-02T17:59:04.594-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112032
2021-04-02T17:59:04.595-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5
2021-04-02T17:59:04.643-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:04.643-0300
2021-04-02T17:59:04.687-0300 [DEBUG] plugin: using plugin: version=5
2021-04-02T17:59:04.688-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: plugin address: address=/tmp/plugin177390702 network=unix timestamp=2021-04-02T17:59:04.687-0300
2021/04/02 17:59:04 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:04.748-0300 [TRACE] plugin.stdio: waiting for stdio data
2021/04/02 17:59:04 [TRACE] GRPCProvider: Close
2021-04-02T17:59:04.977-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:04.980-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112032
2021-04-02T17:59:04.980-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:04 [TRACE] LoadSchemas: retrieving schema for provider type "random"
2021-04-02T17:59:04.980-0300 [INFO]  plugin: configuring client automatic mTLS
2021-04-02T17:59:05.009-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5]
2021-04-02T17:59:05.009-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112044
2021-04-02T17:59:05.009-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5
2021-04-02T17:59:05.016-0300 [INFO]  plugin.terraform-provider-random_v3.1.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:05.015-0300
2021-04-02T17:59:05.065-0300 [DEBUG] plugin.terraform-provider-random_v3.1.0_x5: plugin address: address=/tmp/plugin977160582 network=unix timestamp=2021-04-02T17:59:05.064-0300
2021-04-02T17:59:05.065-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:05 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:05.118-0300 [TRACE] plugin.stdio: waiting for stdio data
2021/04/02 17:59:05 [TRACE] GRPCProvider: Close
2021-04-02T17:59:05.120-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:05.121-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112044
2021-04-02T17:59:05.121-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:05 [TRACE] terraform.NewContext: complete
2021/04/02 17:59:05 [TRACE] backend/local: finished building terraform.Context
2021/04/02 17:59:05 [TRACE] backend/local: requesting interactive input, if necessary
2021/04/02 17:59:05 [TRACE] Context.Input: Prompting for provider arguments
2021/04/02 17:59:05 [TRACE] Context.Input: Provider provider.aws declared at provider.tf:1,1-15
2021/04/02 17:59:05 [TRACE] Context.Input: Provider provider.random implied by resource block at cloudfront.tf:1,1-34
2021/04/02 17:59:05 [TRACE] Context.Input: Input for provider.random: map[string]cty.Value{}
2021/04/02 17:59:05 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2021/04/02 17:59:05 [TRACE] backend/local: running validation operation
2021/04/02 17:59:05 [INFO] terraform: building graph: GraphTypeValidate
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/02 17:59:05 [TRACE] ConfigTransformer: Starting for path: 
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  random_string.random - *terraform.NodeValidatableResource
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  random_string.random - *terraform.NodeValidatableResource
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  random_string.random - *terraform.NodeValidatableResource
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.StateTransformer
2021/04/02 17:59:05 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.route-main" (*terraform.NodeValidatableResource) config from vpc.tf:29,1-40
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.main-vpc" (*terraform.NodeValidatableResource) config from vpc.tf:1,1-30
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.root_zone" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"route_53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:36, Byte:35}}
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_rest_api.rest-api" (*terraform.NodeValidatableResource) config from api_gateway.tf:2,1-47
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodeValidatableResource) config from api_gateway.tf:64,1-63
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodeValidatableResource) config from cloudfront.tf:65,1-66
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_permission.api-gateway-permission" (*terraform.NodeValidatableResource) config from lambda.tf:31,1-58
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.lambda-function-sg" (*terraform.NodeValidatableResource) config from security_groups.tf:1,1-51
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "random_string.random" (*terraform.NodeValidatableResource) config from cloudfront.tf:1,1-34
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda-root" (*terraform.NodeValidatableResource) config from api_gateway.tf:24,1-53
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda" (*terraform.NodeValidatableResource) config from api_gateway.tf:53,1-48
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy" (*terraform.NodeValidatableResource) config from api_gateway.tf:41,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodeValidatableResource) config from iam.tf:21,1-48
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.main-subnets" (*terraform.NodeValidatableResource) config from vpc.tf:13,1-37
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.assoc-table-main" (*terraform.NodeValidatableResource) config from vpc.tf:42,1-58
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.main-gw" (*terraform.NodeValidatableResource) config from vpc.tf:25,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_resource.proxy" (*terraform.NodeValidatableResource) config from api_gateway.tf:35,1-44
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodeValidatableResource) config from iam.tf:45,1-63
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc_endpoint.s3_endpoint" (*terraform.NodeValidatableResource) config from vpc_endpoint.tf:2,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_function.lambda-function" (*terraform.NodeValidatableResource) config from lambda.tf:1,1-49
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodeValidatableResource) config from cloudfront.tf:6,1-66
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.a_record" (*terraform.NodeValidatableResource) config from route_53.tf:6,1-41
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy-root" (*terraform.NodeValidatableResource) config from api_gateway.tf:12,1-47
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.lambda-iam-role" (*terraform.NodeValidatableResource) config from iam.tf:1,1-42
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  random_string.random - *terraform.NodeValidatableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/04/02 17:59:05 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:1,1-15
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeValidatableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/04/02 17:59:05 [DEBUG] adding implicit provider configuration provider.random, implied first by random_string.random
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeValidatableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/04/02 17:59:05 [TRACE] ProviderTransformer: random_string.random is provided by provider.random or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda-root is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_iam_policy.ec2-lamdbda-handler is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_subnet.main-subnets is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_route_table_association.assoc-table-main is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_internet_gateway.main-gw is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_resource.proxy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_iam_role_policy_attachment.attach-role-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_vpc_endpoint.s3_endpoint is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_lambda_function.lambda-function is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_cloudfront_distribution.api-gateway-distribution is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_route53_record.a_record is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy-root is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_iam_role.lambda-iam-role is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_route_table.route-main is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_vpc.main-vpc is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: data.aws_route53_zone.root_zone is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_rest_api.rest-api is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_deployment.api-gateway-deployment is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_lambda_permission.api-gateway-permission is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_security_group.lambda-function-sg is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_route53_zone.root_zone
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "data.aws_route53_zone.root_zone" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.lambda-function-sg
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_security_group.lambda-function-sg" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.random serving random_string.random
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "random_string.random" (*terraform.NodeValidatableResource) needs provider.random
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.lambda-iam-role
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_iam_role.lambda-iam-role" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.main-vpc
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_vpc.main-vpc" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda-root
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda-root" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_vpc_endpoint.s3_endpoint" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.a_record
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_route53_record.a_record" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_lambda_permission.api-gateway-permission" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.main-gw
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_internet_gateway.main-gw" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_function.lambda-function
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_lambda_function.lambda-function" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy-root
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy-root" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table.route-main
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_route_table.route-main" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.main-subnets
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_subnet.main-subnets" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table_association.assoc-table-main
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_route_table_association.assoc-table-main" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_resource.proxy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_resource.proxy" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_rest_api.rest-api" (*terraform.NodeValidatableResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.lambda-function-sg
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.random
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to random_string.random
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.main-subnets
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda-root
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.assoc-table-main
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.main-gw
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_function.lambda-function
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_resource.proxy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.lambda-iam-role
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.a_record
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy-root
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.route-main
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.main-vpc
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.root_zone
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.api_secret_token" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.aws_region var.aws_secret_key var.aws_access_key]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_route_table.route-main" references: [aws_vpc.main-vpc aws_internet_gateway.main-gw]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_vpc.main-vpc" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone" references: [aws_cloudfront_distribution.api-gateway-distribution var.domain]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_lambda_permission.api-gateway-permission" references: [aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api aws_lambda_function.lambda-function]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_security_group.lambda-function-sg" references: [aws_vpc.main-vpc aws_vpc.main-vpc]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.api_fqdn" references: [var.domain]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.cloudfront_hosted_zone_id" references: [aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.domain" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_rest_api.rest-api" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_deployment.api-gateway-deployment" references: [aws_api_gateway_integration.lambda aws_api_gateway_integration.lambda-root aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api aws_api_gateway_resource.proxy aws_api_gateway_method.proxy aws_api_gateway_integration.lambda aws_api_gateway_rest_api.rest-api var.api_stage]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.certificate_arn" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_access_key" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_secret_key" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_region" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "provider.random" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "random_string.random" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.api_gateway_stage_path" references: [var.api_stage]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.lambda_function_arn" references: [aws_lambda_function.lambda-function]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.ec2-lamdbda-handler" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets" references: [var.aws_az_names var.aws_az_names aws_vpc.main-vpc aws_vpc.main-vpc]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.cloudfront_domain_name" references: [aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda-root" references: [aws_api_gateway_method.proxy-root aws_api_gateway_method.proxy-root aws_api_gateway_rest_api.rest-api aws_lambda_function.lambda-function]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda" references: [aws_lambda_function.lambda-function aws_api_gateway_method.proxy aws_api_gateway_method.proxy aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy" references: [aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_az_names" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.api_stage" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main" references: [var.aws_az_names aws_subnet.main-subnets aws_route_table.route-main]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_internet_gateway.main-gw" references: [aws_vpc.main-vpc]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.api_gateway_invoke_url" references: [aws_api_gateway_deployment.api-gateway-deployment]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function" references: [aws_security_group.lambda-function-sg aws_iam_role.lambda-iam-role var.api_secret_token var.api_stage aws_subnet.main-subnets aws_security_group.lambda-function-sg]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.api_fqdn" references: [local.api_fqdn]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_resource.proxy" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.attach-role-policy" references: [aws_iam_policy.ec2-lamdbda-handler aws_iam_role.lambda-iam-role]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_vpc_endpoint.s3_endpoint" references: [aws_vpc.main-vpc aws_route_table.route-main aws_vpc.main-vpc aws_route_table.route-main]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_iam_role.lambda-iam-role" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.cloudfront_origin_id" references: [random_string.random]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.api_gateway_domain" references: [var.api_stage aws_api_gateway_deployment.api-gateway-deployment]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution" references: [aws_api_gateway_deployment.api-gateway-deployment aws_cloudfront_cache_policy.auth-header-cache-policy local.api_fqdn var.api_stage local.api_gateway_domain local.cloudfront_origin_id local.api_gateway_stage_path aws_cloudfront_cache_policy.auth-header-cache-policy local.cloudfront_origin_id var.certificate_arn]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record" references: [data.aws_route53_zone.root_zone aws_cloudfront_distribution.api-gateway-distribution data.aws_route53_zone.root_zone local.api_fqdn aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy-root" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeValidatableResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeValidatableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeValidatableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeValidatableResource
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeValidatableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeValidatableResource
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeValidatableResource
    aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
  aws_api_gateway_method.proxy-root - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_api_gateway_resource.proxy - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeValidatableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
  aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
    aws_iam_role.lambda-iam-role - *terraform.NodeValidatableResource
    aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeValidatableResource
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  aws_route53_record.a_record - *terraform.NodeValidatableResource
    data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
  aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_internet_gateway.main-gw - *terraform.NodeValidatableResource
  aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
    aws_subnet.main-subnets - *terraform.NodeValidatableResource
  aws_security_group.lambda-function-sg - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
  aws_subnet.main-subnets - *terraform.NodeValidatableResource
    aws_vpc.main-vpc - *terraform.NodeValidatableResource
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeValidatableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    aws_route_table.route-main - *terraform.NodeValidatableResource
  data.aws_route53_zone.root_zone - *terraform.NodeValidatableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeValidatableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeValidatableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeValidatableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeValidatableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeValidatableResource
    aws_route53_record.a_record - *terraform.NodeValidatableResource
    aws_route_table_association.assoc-table-main - *terraform.NodeValidatableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeValidatableResource
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    random_string.random - *terraform.NodeValidatableResource
  random_string.random - *terraform.NodeValidatableResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [DEBUG] Starting graph walk: walkValidate
2021/04/02 17:59:05 [TRACE] dag/walk: updating graph
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "random_string.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_access_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_secret_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.cloudfront_domain_name"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.random (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.api_gateway_stage_path"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_az_names"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.api_stage"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.api_gateway_domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.lambda_function_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.api_gateway_invoke_url"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.main-gw"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.cloudfront_origin_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.api_secret_token"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_region"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.certificate_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_security_group.lambda-function-sg"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_resource.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.api_gateway_invoke_url" waiting on "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root" waiting on "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main" waiting on "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_stage_path"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets" waiting on "var.aws_az_names"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.random (close)" waiting on "random_string.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_region"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda" waiting on "aws_api_gateway_method.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_vpc_endpoint.s3_endpoint" waiting on "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_role.lambda-iam-role" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.lambda_function_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.api_gateway_invoke_url"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_secret_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_rest_api.rest-api" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_security_group.lambda-function-sg" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.cloudfront_origin_id" waiting on "random_string.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment" waiting on "aws_api_gateway_integration.lambda"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main" waiting on "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "random_string.random" waiting on "provider.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_cache_policy.auth-header-cache-policy" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.api_fqdn" waiting on "var.domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.random (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.cloudfront_domain_name" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_vpc.main-vpc" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_resource.proxy" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy-root" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.cloudfront_hosted_zone_id" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "var.certificate_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment" waiting on "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.api_gateway_stage_path" waiting on "var.api_stage"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route_table.route-main" waiting on "aws_internet_gateway.main-gw"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy" waiting on "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_secret_token"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "data.aws_route53_zone.root_zone" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_stage"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.cloudfront_origin_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cloudfront_domain_name"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.api_fqdn" waiting on "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_security_group.lambda-function-sg"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy" waiting on "aws_api_gateway_resource.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.lambda_function_arn" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_internet_gateway.main-gw" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy" waiting on "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.api_gateway_domain" waiting on "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_access_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route53_record.a_record" waiting on "data.aws_route53_zone.root_zone"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_policy.ec2-lamdbda-handler" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_subnet.main-subnets", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_rest_api.rest-api", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_security_group.lambda-function-sg", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.cloudfront_origin_id", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy-root", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.api_gateway_domain", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "provider.random (close)", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_iam_role.lambda-iam-role", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.api_fqdn", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_lambda_permission.api-gateway-permission", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_vpc.main-vpc", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.api_fqdn", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.cloudfront_domain_name", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy_attachment.attach-role-policy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "data.aws_route53_zone.root_zone", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda-root", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.cloudfront_hosted_zone_id", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.main-gw", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_iam_policy.ec2-lamdbda-handler", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_vpc_endpoint.s3_endpoint", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_lambda_function.lambda-function", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_route_table.route-main", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_resource.proxy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.api_gateway_stage_path", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_route53_record.a_record", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.api_gateway_invoke_url", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_deployment.api-gateway-deployment", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_route_table_association.assoc-table-main", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_distribution.api-gateway-distribution", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "random_string.random", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_cache_policy.auth-header-cache-policy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.lambda_function_arn", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.certificate_arn"
2021/04/02 17:59:05 [TRACE] vertex "var.certificate_arn": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.certificate_arn": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.certificate_arn
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.certificate_arn
2021/04/02 17:59:05 [TRACE] vertex "var.certificate_arn": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_access_key"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_access_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "provider.random"
2021/04/02 17:59:05 [TRACE] vertex "provider.random": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_secret_key"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_secret_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.api_stage"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_secret_key": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.aws_secret_key
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.aws_secret_key
2021/04/02 17:59:05 [TRACE] vertex "var.aws_secret_key": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.api_secret_token"
2021/04/02 17:59:05 [TRACE] vertex "var.api_secret_token": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.api_secret_token": evaluating
2021/04/02 17:59:05 [TRACE] vertex "var.api_stage": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.api_secret_token
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.api_secret_token
2021/04/02 17:59:05 [TRACE] vertex "var.api_secret_token": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_region"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_region": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.aws_region": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.aws_region
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.aws_region
2021/04/02 17:59:05 [TRACE] vertex "var.aws_region": visit complete
2021/04/02 17:59:05 [TRACE] vertex "var.api_stage": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.api_stage
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.api_stage
2021/04/02 17:59:05 [TRACE] vertex "var.api_stage": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "local.api_gateway_stage_path"
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_stage_path": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_stage_path": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: local.api_gateway_stage_path
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: local.api_gateway_stage_path
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_stage_path": visit complete
2021/04/02 17:59:05 [TRACE] vertex "provider.random": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: provider.random
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-04-02T17:59:05.131-0300 [INFO]  plugin: configuring client automatic mTLS
2021/04/02 17:59:05 [TRACE] vertex "var.aws_access_key": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.aws_access_key
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.aws_access_key
2021/04/02 17:59:05 [TRACE] vertex "var.aws_access_key": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.domain"
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "provider.aws"
2021/04/02 17:59:05 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:05 [TRACE] vertex "var.domain": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.domain": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.domain
2021/04/02 17:59:05 [TRACE] vertex "provider.aws": evaluating
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: provider.aws
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.domain
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_az_names"
2021/04/02 17:59:05 [TRACE] vertex "var.domain": visit complete
2021/04/02 17:59:05 [TRACE] vertex "var.aws_az_names": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.aws_az_names": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: var.aws_az_names
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: var.aws_az_names
2021/04/02 17:59:05 [TRACE] vertex "var.aws_az_names": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] vertex "local.api_fqdn": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:05 [TRACE] vertex "local.api_fqdn": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: local.api_fqdn
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: local.api_fqdn
2021/04/02 17:59:05 [TRACE] vertex "local.api_fqdn": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "output.api_fqdn"
2021/04/02 17:59:05 [TRACE] vertex "output.api_fqdn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:05 [TRACE] vertex "output.api_fqdn": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: output.api_fqdn
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Removing output.api_fqdn from state (it is now null)
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving Create change for output.api_fqdn in changeset
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: output.api_fqdn
2021/04/02 17:59:05 [TRACE] vertex "output.api_fqdn": visit complete
2021-04-02T17:59:05.159-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5]
2021-04-02T17:59:05.161-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112053
2021-04-02T17:59:05.161-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5
2021-04-02T17:59:05.166-0300 [INFO]  plugin.terraform-provider-random_v3.1.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:05.166-0300
2021-04-02T17:59:05.213-0300 [DEBUG] plugin: using plugin: version=5
2021-04-02T17:59:05.213-0300 [DEBUG] plugin.terraform-provider-random_v3.1.0_x5: plugin address: address=/tmp/plugin906792586 network=unix timestamp=2021-04-02T17:59:05.213-0300
2021/04/02 17:59:05 [TRACE] BuiltinEvalContext: Initialized "random" provider for provider.random
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021-04-02T17:59:05.266-0300 [TRACE] plugin.stdio: waiting for stdio data
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021-04-02T17:59:05.267-0300 [INFO]  plugin: configuring client automatic mTLS
2021-04-02T17:59:05.293-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5]
2021-04-02T17:59:05.294-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112061
2021-04-02T17:59:05.294-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5
2021-04-02T17:59:05.345-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:05.345-0300
2021-04-02T17:59:05.394-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: plugin address: address=/tmp/plugin804432570 network=unix timestamp=2021-04-02T17:59:05.394-0300
2021-04-02T17:59:05.394-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:05 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/04/02 17:59:05 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/04/02 17:59:05 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:05.478-0300 [TRACE] plugin.stdio: waiting for stdio data
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2021/04/02 17:59:05 [TRACE] buildProviderConfig for provider.random: no configuration at all
2021/04/02 17:59:05 [TRACE] GRPCProvider: GetSchema
2021/04/02 17:59:05 [TRACE] GRPCProvider: PrepareProviderConfig
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: provider.random
2021/04/02 17:59:05 [TRACE] vertex "provider.random": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "random_string.random"
2021/04/02 17:59:05 [TRACE] vertex "random_string.random": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "random_string.random": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: random_string.random
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: random_string.random
2021/04/02 17:59:05 [TRACE] vertex "random_string.random": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "provider.random (close)"
2021/04/02 17:59:05 [TRACE] vertex "provider.random (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:05 [TRACE] vertex "provider.random (close)": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: provider.random (close)
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:05 [TRACE] GRPCProvider: Close
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "local.cloudfront_origin_id"
2021/04/02 17:59:05 [TRACE] vertex "local.cloudfront_origin_id": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:05 [TRACE] vertex "local.cloudfront_origin_id": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: local.cloudfront_origin_id
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: local.cloudfront_origin_id
2021/04/02 17:59:05 [TRACE] vertex "local.cloudfront_origin_id": visit complete
2021-04-02T17:59:05.485-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:05.486-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112053
2021-04-02T17:59:05.486-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: provider.random (close)
2021/04/02 17:59:05 [TRACE] vertex "provider.random (close)": visit complete
2021/04/02 17:59:05 [TRACE] GRPCProvider: PrepareProviderConfig
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2021/04/02 17:59:05 [TRACE] vertex "provider.aws": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:05 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] vertex "aws_vpc.main-vpc": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_vpc.main-vpc": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_vpc.main-vpc
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_role.lambda-iam-role": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_role.lambda-iam-role": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:05.799-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:05.799-0300
2021-04-02T17:59:05.799-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:05.799-0300
2021-04-02T17:59:05.800-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:05.800-0300
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_role.lambda-iam-role": visit complete
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_vpc.main-vpc
2021/04/02 17:59:05 [TRACE] vertex "aws_vpc.main-vpc": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_resource.proxy"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_resource.proxy": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_method.proxy-root": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_resource.proxy": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_method.proxy-root": evaluating
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_subnet.main-subnets": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": evaluating
2021/04/02 17:59:05 [TRACE] vertex "aws_subnet.main-subnets": evaluating
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_internet_gateway.main-gw"
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_subnet.main-subnets
2021/04/02 17:59:05 [TRACE] vertex "aws_internet_gateway.main-gw": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] vertex "aws_internet_gateway.main-gw": evaluating
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_security_group.lambda-function-sg"
2021/04/02 17:59:05 [TRACE] vertex "aws_security_group.lambda-function-sg": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_security_group.lambda-function-sg": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:05 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:05.802-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:05.802-0300
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_subnet.main-subnets
2021/04/02 17:59:05 [TRACE] vertex "aws_subnet.main-subnets": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:05 [TRACE] vertex "aws_security_group.lambda-function-sg": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] vertex "aws_lambda_function.lambda-function": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_lambda_function.lambda-function": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_resource.proxy": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_method.proxy": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_method.proxy": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:05 [TRACE] vertex "aws_internet_gateway.main-gw": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] vertex "aws_route_table.route-main": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_route_table.route-main": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_route_table.route-main
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:05 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_method.proxy": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_route_table.route-main
2021/04/02 17:59:05 [TRACE] vertex "aws_route_table.route-main": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:05 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:05 [TRACE] vertex "aws_route_table_association.assoc-table-main": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_route_table_association.assoc-table-main": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_route_table_association.assoc-table-main
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:05 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_route_table_association.assoc-table-main
2021/04/02 17:59:05 [TRACE] vertex "aws_route_table_association.assoc-table-main": visit complete
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:05 [TRACE] vertex "aws_lambda_function.lambda-function": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_integration.lambda": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_integration.lambda": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:05 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "output.lambda_function_arn"
2021/04/02 17:59:05 [TRACE] vertex "output.lambda_function_arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:05 [TRACE] vertex "output.lambda_function_arn": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: output.lambda_function_arn
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Removing output.lambda_function_arn from state (it is now null)
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving Create change for output.lambda_function_arn in changeset
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: output.lambda_function_arn
2021/04/02 17:59:05 [TRACE] vertex "output.lambda_function_arn": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_integration.lambda": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_method.proxy-root": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_integration.lambda-root": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_integration.lambda-root": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:05 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_integration.lambda-root": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:05 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "local.api_gateway_domain"
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_domain": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_domain": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: local.api_gateway_domain
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "output.api_gateway_invoke_url"
2021/04/02 17:59:05 [TRACE] vertex "output.api_gateway_invoke_url": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:05 [TRACE] vertex "output.api_gateway_invoke_url": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: local.api_gateway_domain
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_domain": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Removing output.api_gateway_invoke_url from state (it is now null)
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving Create change for output.api_gateway_invoke_url in changeset
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:05 [TRACE] vertex "output.api_gateway_invoke_url": visit complete
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:05.816-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:05 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:05.816-0300
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:05 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "data.aws_route53_zone.root_zone"
2021/04/02 17:59:05 [TRACE] vertex "data.aws_route53_zone.root_zone": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "data.aws_route53_zone.root_zone": evaluating
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "output.cloudfront_domain_name"
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:05 [TRACE] vertex "output.cloudfront_domain_name": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:05 [TRACE] vertex "output.cloudfront_hosted_zone_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:05 [TRACE] vertex "output.cloudfront_domain_name": evaluating
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: output.cloudfront_domain_name
2021/04/02 17:59:05 [TRACE] vertex "output.cloudfront_hosted_zone_id": evaluating
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: output.cloudfront_hosted_zone_id
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Removing output.cloudfront_domain_name from state (it is now null)
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Removing output.cloudfront_hosted_zone_id from state (it is now null)
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving Create change for output.cloudfront_domain_name in changeset
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving Create change for output.cloudfront_hosted_zone_id in changeset
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: output.cloudfront_domain_name
2021/04/02 17:59:05 [TRACE] vertex "output.cloudfront_domain_name": visit complete
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: output.cloudfront_hosted_zone_id
2021/04/02 17:59:05 [TRACE] vertex "output.cloudfront_hosted_zone_id": visit complete
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateDataSourceConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:05 [TRACE] vertex "data.aws_route53_zone.root_zone": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "aws_route53_record.a_record"
2021/04/02 17:59:05 [TRACE] vertex "aws_route53_record.a_record": starting visit (*terraform.NodeValidatableResource)
2021/04/02 17:59:05 [TRACE] vertex "aws_route53_record.a_record": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: aws_route53_record.a_record
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalValidateResource
2021/04/02 17:59:05 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: aws_route53_record.a_record
2021/04/02 17:59:05 [TRACE] vertex "aws_route53_record.a_record": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/04/02 17:59:05 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:05 [TRACE] vertex "provider.aws (close)": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:05 [TRACE] GRPCProvider: Close
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:05 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/04/02 17:59:05 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/04/02 17:59:05 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/04/02 17:59:05 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-04-02T17:59:05.819-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:05.821-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112061
2021-04-02T17:59:05.821-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:05 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2021/04/02 17:59:05 [TRACE] vertex "provider.aws (close)": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:05 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:05 [TRACE] vertex "root": visit complete
2021/04/02 17:59:05 [INFO] backend/local: apply calling Refresh
2021/04/02 17:59:05 [INFO] terraform: building graph: GraphTypeRefresh
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/02 17:59:05 [TRACE] ConfigTransformer: Starting for path: 
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  random_string.random - *terraform.NodeRefreshableManagedResource
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/02 17:59:05 [TRACE] ConfigTransformer: Starting for path: 
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  random_string.random - *terraform.NodeRefreshableManagedResource
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.StateTransformer
2021/04/02 17:59:05 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:41,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.main-subnets" (*terraform.NodeRefreshableManagedResource) config from vpc.tf:13,1-37
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc_endpoint.s3_endpoint" (*terraform.NodeRefreshableManagedResource) config from vpc_endpoint.tf:2,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda-root" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:24,1-53
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:64,1-63
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_resource.proxy" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:35,1-44
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.lambda-function-sg" (*terraform.NodeRefreshableManagedResource) config from security_groups.tf:1,1-51
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_rest_api.rest-api" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:2,1-47
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodeRefreshableManagedResource) config from cloudfront.tf:6,1-66
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.a_record" (*terraform.NodeRefreshableManagedResource) config from route_53.tf:6,1-41
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.assoc-table-main" (*terraform.NodeRefreshableManagedResource) config from vpc.tf:42,1-58
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodeRefreshableManagedResource) config from iam.tf:21,1-48
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "random_string.random" (*terraform.NodeRefreshableManagedResource) config from cloudfront.tf:1,1-34
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.lambda-iam-role" (*terraform.NodeRefreshableManagedResource) config from iam.tf:1,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_permission.api-gateway-permission" (*terraform.NodeRefreshableManagedResource) config from lambda.tf:31,1-58
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.root_zone" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"route_53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:36, Byte:35}}
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.main-gw" (*terraform.NodeRefreshableManagedResource) config from vpc.tf:25,1-42
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.main-vpc" (*terraform.NodeRefreshableManagedResource) config from vpc.tf:1,1-30
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodeRefreshableManagedResource) config from cloudfront.tf:65,1-66
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodeRefreshableManagedResource) config from iam.tf:45,1-63
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_function.lambda-function" (*terraform.NodeRefreshableManagedResource) config from lambda.tf:1,1-49
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:53,1-48
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.route-main" (*terraform.NodeRefreshableManagedResource) config from vpc.tf:29,1-40
2021/04/02 17:59:05 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy-root" (*terraform.NodeRefreshableManagedResource) config from api_gateway.tf:12,1-47
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  random_string.random - *terraform.NodeRefreshableManagedResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  random_string.random - *terraform.NodeRefreshableManagedResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  random_string.random - *terraform.NodeRefreshableManagedResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/04/02 17:59:05 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:1,1-15
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeRefreshableManagedResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/04/02 17:59:05 [DEBUG] adding implicit provider configuration provider.random, implied first by random_string.random
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeRefreshableManagedResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_subnet.main-subnets is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_vpc_endpoint.s3_endpoint is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_deployment.api-gateway-deployment is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_security_group.lambda-function-sg is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_rest_api.rest-api is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_cloudfront_distribution.api-gateway-distribution is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_route53_record.a_record is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_route_table_association.assoc-table-main is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_internet_gateway.main-gw is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_iam_role.lambda-iam-role is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_lambda_permission.api-gateway-permission is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy-root is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_vpc.main-vpc is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_iam_role_policy_attachment.attach-role-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_route_table.route-main is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_resource.proxy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda-root is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_iam_policy.ec2-lamdbda-handler is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: random_string.random is provided by provider.random or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: data.aws_route53_zone.root_zone is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: aws_lambda_function.lambda-function is provided by provider.aws or inherited equivalent
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.main-subnets
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_subnet.main-subnets" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_vpc_endpoint.s3_endpoint" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.lambda-function-sg
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_security_group.lambda-function-sg" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_lambda_permission.api-gateway-permission" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda-root
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda-root" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_rest_api.rest-api" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.a_record
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_route53_record.a_record" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.main-gw
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_internet_gateway.main-gw" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.lambda-iam-role
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_iam_role.lambda-iam-role" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.random serving random_string.random
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "random_string.random" (*terraform.NodeRefreshableManagedResource) needs provider.random
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_route53_zone.root_zone
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "data.aws_route53_zone.root_zone" (*terraform.NodeRefreshableDataResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table_association.assoc-table-main
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_route_table_association.assoc-table-main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy-root
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy-root" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_function.lambda-function
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_lambda_function.lambda-function" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.main-vpc
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_vpc.main-vpc" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table.route-main
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_route_table.route-main" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_resource.proxy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_api_gateway_resource.proxy" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:05 [DEBUG] ProviderTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeRefreshableManagedResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/04/02 17:59:05 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeRefreshableManagedResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_resource.proxy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda-root
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to random_string.random
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.root_zone
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.random
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_function.lambda-function
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.main-subnets
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.a_record
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.assoc-table-main
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.lambda-function-sg
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.main-gw
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.lambda-iam-role
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.route-main
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy-root
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.main-vpc
2021/04/02 17:59:05 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_iam_policy.ec2-lamdbda-handler" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_secret_key" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.api_fqdn" references: [local.api_fqdn]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "random_string.random" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone" references: [aws_cloudfront_distribution.api-gateway-distribution var.domain]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_access_key" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.api_secret_token" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.aws_secret_key var.aws_region var.aws_access_key]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function" references: [aws_security_group.lambda-function-sg aws_iam_role.lambda-iam-role var.api_secret_token var.api_stage aws_subnet.main-subnets aws_security_group.lambda-function-sg]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.domain" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.cloudfront_origin_id" references: [random_string.random]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.api_gateway_stage_path" references: [var.api_stage]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.cloudfront_hosted_zone_id" references: [aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "provider.random" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy" references: [aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets" references: [var.aws_az_names aws_vpc.main-vpc aws_vpc.main-vpc var.aws_az_names]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_vpc_endpoint.s3_endpoint" references: [aws_vpc.main-vpc aws_route_table.route-main aws_route_table.route-main aws_vpc.main-vpc]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_deployment.api-gateway-deployment" references: [aws_api_gateway_integration.lambda aws_api_gateway_integration.lambda-root aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api var.api_stage aws_api_gateway_resource.proxy aws_api_gateway_method.proxy aws_api_gateway_integration.lambda]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_az_names" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.lambda_function_arn" references: [aws_lambda_function.lambda-function]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.api_gateway_invoke_url" references: [aws_api_gateway_deployment.api-gateway-deployment]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_security_group.lambda-function-sg" references: [aws_vpc.main-vpc aws_vpc.main-vpc]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_rest_api.rest-api" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution" references: [aws_api_gateway_deployment.api-gateway-deployment aws_cloudfront_cache_policy.auth-header-cache-policy local.api_fqdn var.api_stage local.cloudfront_origin_id local.api_gateway_stage_path local.api_gateway_domain aws_cloudfront_cache_policy.auth-header-cache-policy local.cloudfront_origin_id var.certificate_arn]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record" references: [data.aws_route53_zone.root_zone aws_cloudfront_distribution.api-gateway-distribution data.aws_route53_zone.root_zone local.api_fqdn aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main" references: [var.aws_az_names aws_subnet.main-subnets aws_route_table.route-main]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.api_fqdn" references: [var.domain]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_internet_gateway.main-gw" references: [aws_vpc.main-vpc]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_iam_role.lambda-iam-role" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_lambda_permission.api-gateway-permission" references: [aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.api_stage" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "local.api_gateway_domain" references: [var.api_stage aws_api_gateway_deployment.api-gateway-deployment]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy-root" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_vpc.main-vpc" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.attach-role-policy" references: [aws_iam_policy.ec2-lamdbda-handler aws_iam_role.lambda-iam-role]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda" references: [aws_api_gateway_method.proxy aws_api_gateway_method.proxy aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_route_table.route-main" references: [aws_vpc.main-vpc aws_internet_gateway.main-gw]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.aws_region" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "var.certificate_arn" references: []
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "output.cloudfront_domain_name" references: [aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_resource.proxy" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda-root" references: [aws_api_gateway_method.proxy-root aws_api_gateway_method.proxy-root aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeRefreshableManagedResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeRefreshableManagedResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_internet_gateway.main-gw depends on [aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_iam_role.lambda-iam-role depends on []
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_lambda_permission.api-gateway-permission depends on [aws_api_gateway_rest_api.rest-api aws_iam_role.lambda-iam-role aws_lambda_function.lambda-function aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_integration.lambda depends on [aws_api_gateway_method.proxy aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api aws_iam_role.lambda-iam-role aws_lambda_function.lambda-function aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_route_table.route-main depends on [aws_internet_gateway.main-gw aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_method.proxy-root depends on [aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_vpc.main-vpc depends on []
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_iam_role_policy_attachment.attach-role-policy depends on [aws_iam_policy.ec2-lamdbda-handler aws_iam_role.lambda-iam-role]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_resource.proxy depends on [aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_integration.lambda-root depends on [aws_api_gateway_method.proxy-root aws_api_gateway_rest_api.rest-api aws_iam_role.lambda-iam-role aws_lambda_function.lambda-function aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_iam_policy.ec2-lamdbda-handler depends on []
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: random_string.random depends on []
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy depends on []
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_lambda_function.lambda-function depends on [aws_iam_role.lambda-iam-role aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_deployment.api-gateway-deployment depends on [aws_api_gateway_integration.lambda aws_api_gateway_integration.lambda-root aws_api_gateway_method.proxy aws_api_gateway_method.proxy-root aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api aws_iam_role.lambda-iam-role aws_lambda_function.lambda-function aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_method.proxy depends on [aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_subnet.main-subnets depends on [aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_vpc_endpoint.s3_endpoint depends on [aws_internet_gateway.main-gw aws_route_table.route-main aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_route53_record.a_record depends on [aws_api_gateway_deployment.api-gateway-deployment aws_api_gateway_integration.lambda aws_api_gateway_integration.lambda-root aws_api_gateway_method.proxy aws_api_gateway_method.proxy-root aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api aws_cloudfront_cache_policy.auth-header-cache-policy aws_cloudfront_distribution.api-gateway-distribution aws_iam_role.lambda-iam-role aws_lambda_function.lambda-function aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc random_string.random]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_route_table_association.assoc-table-main depends on [aws_internet_gateway.main-gw aws_route_table.route-main aws_subnet.main-subnets aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_security_group.lambda-function-sg depends on [aws_vpc.main-vpc]
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_api_gateway_rest_api.rest-api depends on []
2021/04/02 17:59:05 [TRACE] AttachDependenciesTransformer: aws_cloudfront_distribution.api-gateway-distribution depends on [aws_api_gateway_deployment.api-gateway-deployment aws_api_gateway_integration.lambda aws_api_gateway_integration.lambda-root aws_api_gateway_method.proxy aws_api_gateway_method.proxy-root aws_api_gateway_resource.proxy aws_api_gateway_rest_api.rest-api aws_cloudfront_cache_policy.auth-header-cache-policy aws_iam_role.lambda-iam-role aws_lambda_function.lambda-function aws_security_group.lambda-function-sg aws_subnet.main-subnets aws_vpc.main-vpc random_string.random]
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeRefreshableManagedResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeRefreshableManagedResource
  random_string.random - *terraform.NodeRefreshableManagedResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeRefreshableManagedResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeRefreshableManagedResource
  random_string.random - *terraform.NodeRefreshableManagedResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/04/02 17:59:05 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
    aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResource
    aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResource
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResource
  aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
    aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
  aws_subnet.main-subnets - *terraform.NodeRefreshableManagedResource
    aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
    aws_route_table.route-main - *terraform.NodeRefreshableManagedResource
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeRefreshableManagedResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResource
    aws_route53_record.a_record - *terraform.NodeRefreshableManagedResource
    aws_route_table_association.assoc-table-main - *terraform.NodeRefreshableManagedResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResource
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    random_string.random - *terraform.NodeRefreshableManagedResource
  random_string.random - *terraform.NodeRefreshableManagedResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:05 [DEBUG] Starting graph walk: walkRefresh
2021/04/02 17:59:05 [TRACE] dag/walk: updating graph
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.api_stage"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.api_gateway_domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.cloudfront_domain_name"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.cloudfront_origin_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.lambda_function_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_resource.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_access_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_security_group.lambda-function-sg"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.random (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.api_secret_token"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "output.api_gateway_invoke_url"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_secret_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "local.api_gateway_stage_path"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "provider.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_az_names"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.main-gw"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.aws_region"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "var.certificate_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added new vertex: "random_string.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "output.cloudfront_domain_name"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main" waiting on "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_role.lambda-iam-role" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_vpc.main-vpc" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_stage_path"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.cloudfront_origin_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda" waiting on "aws_api_gateway_method.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy-root" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root" waiting on "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_policy.ec2-lamdbda-handler" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.api_gateway_stage_path" waiting on "var.api_stage"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_vpc_endpoint.s3_endpoint" waiting on "aws_route_table.route-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_cache_policy.auth-header-cache-policy" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.api_fqdn" waiting on "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.api_gateway_domain" waiting on "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_internet_gateway.main-gw" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "output.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_rest_api.rest-api" waiting on "provider.aws"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_stage"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "random_string.random" waiting on "provider.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_access_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main" waiting on "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.cloudfront_domain_name" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_subnet.main-subnets"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.lambda_function_arn" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy" waiting on "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment" waiting on "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "provider.random (close)"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_region"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy" waiting on "aws_api_gateway_resource.proxy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "output.lambda_function_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.random (close)" waiting on "random_string.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_secret_token"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy" waiting on "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route_table.route-main" waiting on "aws_internet_gateway.main-gw"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "var.certificate_arn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_resource.proxy" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "output.api_gateway_invoke_url"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.cloudfront_hosted_zone_id" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "output.api_gateway_invoke_url" waiting on "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets" waiting on "var.aws_az_names"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_route53_record.a_record" waiting on "data.aws_route53_zone.root_zone"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.cloudfront_origin_id" waiting on "random_string.random"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_secret_key"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "root" waiting on "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_security_group.lambda-function-sg"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment" waiting on "aws_api_gateway_integration.lambda"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "aws_security_group.lambda-function-sg" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "local.api_fqdn" waiting on "var.domain"
2021/04/02 17:59:05 [TRACE] dag/walk: added edge: "data.aws_route53_zone.root_zone" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_distribution.api-gateway-distribution", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy-root", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_rest_api.rest-api", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.cloudfront_origin_id", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_security_group.lambda-function-sg", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_vpc.main-vpc", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda-root", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "provider.random (close)", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_lambda_permission.api-gateway-permission", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.api_fqdn", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_iam_role.lambda-iam-role", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.lambda_function_arn", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.api_fqdn", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_lambda_function.lambda-function", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.main-gw", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_deployment.api-gateway-deployment", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_cache_policy.auth-header-cache-policy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.api_gateway_domain", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "data.aws_route53_zone.root_zone", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy_attachment.attach-role-policy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.api_gateway_invoke_url", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_iam_policy.ec2-lamdbda-handler", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_route_table.route-main", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_resource.proxy", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.cloudfront_hosted_zone_id", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_route53_record.a_record", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "output.cloudfront_domain_name", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_subnet.main-subnets", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_vpc_endpoint.s3_endpoint", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "random_string.random", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "aws_route_table_association.assoc-table-main", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: dependencies changed for "local.api_gateway_stage_path", sending new deps
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_access_key"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_access_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_secret_key"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_secret_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.aws_secret_key": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.aws_secret_key
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.aws_secret_key
2021/04/02 17:59:05 [TRACE] vertex "var.aws_secret_key": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_az_names"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_az_names": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.aws_az_names": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.aws_az_names
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.aws_az_names
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.api_stage"
2021/04/02 17:59:05 [TRACE] vertex "var.api_stage": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.api_stage": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.api_stage
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "provider.random"
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] vertex "provider.random": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.certificate_arn"
2021/04/02 17:59:05 [TRACE] vertex "var.certificate_arn": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.certificate_arn": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.certificate_arn
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.aws_region"
2021/04/02 17:59:05 [TRACE] vertex "var.aws_region": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.aws_region": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.aws_region
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.aws_region
2021/04/02 17:59:05 [TRACE] vertex "var.aws_region": visit complete
2021/04/02 17:59:05 [TRACE] vertex "var.aws_az_names": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.domain"
2021/04/02 17:59:05 [TRACE] vertex "var.domain": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.domain": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.domain
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.domain
2021/04/02 17:59:05 [TRACE] vertex "var.domain": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "local.api_fqdn"
2021/04/02 17:59:05 [TRACE] vertex "local.api_fqdn": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:05 [TRACE] vertex "local.api_fqdn": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: local.api_fqdn
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: local.api_fqdn
2021/04/02 17:59:05 [TRACE] vertex "local.api_fqdn": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "output.api_fqdn"
2021/04/02 17:59:05 [TRACE] vertex "output.api_fqdn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:05 [TRACE] vertex "output.api_fqdn": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: output.api_fqdn
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving value for output.api_fqdn in state
2021/04/02 17:59:05 [TRACE] EvalWriteOutput: Saving Create change for output.api_fqdn in changeset
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: output.api_fqdn
2021/04/02 17:59:05 [TRACE] vertex "output.api_fqdn": visit complete
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.api_stage
2021/04/02 17:59:05 [TRACE] vertex "var.api_stage": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "local.api_gateway_stage_path"
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_stage_path": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_stage_path": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: local.api_gateway_stage_path
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: local.api_gateway_stage_path
2021/04/02 17:59:05 [TRACE] vertex "local.api_gateway_stage_path": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "var.api_secret_token"
2021/04/02 17:59:05 [TRACE] vertex "var.api_secret_token": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:05 [TRACE] vertex "var.api_secret_token": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.api_secret_token
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.api_secret_token
2021/04/02 17:59:05 [TRACE] vertex "var.api_secret_token": visit complete
2021/04/02 17:59:05 [TRACE] vertex "provider.random": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: provider.random
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-04-02T17:59:05.830-0300 [INFO]  plugin: configuring client automatic mTLS
2021/04/02 17:59:05 [TRACE] vertex "var.aws_access_key": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: var.aws_access_key
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.aws_access_key
2021/04/02 17:59:05 [TRACE] vertex "var.aws_access_key": visit complete
2021/04/02 17:59:05 [TRACE] dag/walk: visiting "provider.aws"
2021/04/02 17:59:05 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:05 [TRACE] vertex "provider.aws": evaluating
2021/04/02 17:59:05 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] [walkRefresh] Exiting eval tree: var.certificate_arn
2021/04/02 17:59:05 [TRACE] vertex "var.certificate_arn": visit complete
2021-04-02T17:59:05.859-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5]
2021-04-02T17:59:05.859-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112069
2021-04-02T17:59:05.859-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5
2021-04-02T17:59:05.867-0300 [INFO]  plugin.terraform-provider-random_v3.1.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:05.866-0300
2021-04-02T17:59:05.920-0300 [DEBUG] plugin.terraform-provider-random_v3.1.0_x5: plugin address: address=/tmp/plugin071554056 network=unix timestamp=2021-04-02T17:59:05.920-0300
2021-04-02T17:59:05.920-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:05 [TRACE] BuiltinEvalContext: Initialized "random" provider for provider.random
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:05 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/02 17:59:05 [TRACE] buildProviderConfig for provider.random: no configuration at all
2021/04/02 17:59:05 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:05.981-0300 [TRACE] plugin.stdio: waiting for stdio data
2021-04-02T17:59:05.981-0300 [INFO]  plugin: configuring client automatic mTLS
2021-04-02T17:59:06.011-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5]
2021-04-02T17:59:06.012-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112078
2021-04-02T17:59:06.012-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5
2021-04-02T17:59:06.064-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:06.064-0300
2021-04-02T17:59:06.142-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: plugin address: address=/tmp/plugin827009065 network=unix timestamp=2021-04-02T17:59:06.142-0300
2021-04-02T17:59:06.142-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:06 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/04/02 17:59:06 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:06 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/02 17:59:06 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/04/02 17:59:06 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:06.207-0300 [TRACE] plugin.stdio: waiting for stdio data
2021/04/02 17:59:06 [TRACE] GRPCProvider: Configure
2021/04/02 17:59:06 [TRACE] [walkRefresh] Exiting eval tree: provider.random
2021/04/02 17:59:06 [TRACE] vertex "provider.random": visit complete
2021/04/02 17:59:06 [TRACE] dag/walk: visiting "random_string.random"
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": expanding dynamic subgraph
2021/04/02 17:59:06 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:06 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  random_string.random - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:06 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:06 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:06 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:06 [DEBUG] Resource state not found for node "random_string.random", instance random_string.random
2021/04/02 17:59:06 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:06 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:06 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:06 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:06 [DEBUG] ReferenceTransformer: "random_string.random" references: []
2021/04/02 17:59:06 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:06 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:06 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": entering dynamic subgraph
2021/04/02 17:59:06 [TRACE] dag/walk: updating graph
2021/04/02 17:59:06 [TRACE] dag/walk: added new vertex: "random_string.random"
2021/04/02 17:59:06 [TRACE] dag/walk: visiting "random_string.random"
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:06 [TRACE] NodeRefreshableManagedResourceInstance: random_string.random has no existing state to refresh
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": evaluating
2021/04/02 17:59:06 [TRACE] [walkRefresh] Entering eval tree: random_string.random
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:06 [TRACE] EvalReadState: reading state for random_string.random
2021/04/02 17:59:06 [TRACE] EvalReadState: no state present for random_string.random
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:06 [TRACE] Re-validating config for "random_string.random"
2021/04/02 17:59:06 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:06 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:06 [WARN] Provider "registry.terraform.io/-/random" produced an invalid plan for random_string.random, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:06 [TRACE] EvalWriteState: recording 0 dependencies for random_string.random
2021/04/02 17:59:06 [TRACE] EvalWriteState: writing current state object for random_string.random
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:06 [TRACE] EvalWriteDiff: recorded Create change for random_string.random
2021/04/02 17:59:06 [TRACE] [walkRefresh] Exiting eval tree: random_string.random
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": visit complete
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": dynamic subgraph completed successfully
2021/04/02 17:59:06 [TRACE] vertex "random_string.random": visit complete
2021/04/02 17:59:06 [TRACE] dag/walk: visiting "local.cloudfront_origin_id"
2021/04/02 17:59:06 [TRACE] vertex "local.cloudfront_origin_id": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:06 [TRACE] vertex "local.cloudfront_origin_id": evaluating
2021/04/02 17:59:06 [TRACE] [walkRefresh] Entering eval tree: local.cloudfront_origin_id
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:06 [TRACE] dag/walk: visiting "provider.random (close)"
2021/04/02 17:59:06 [TRACE] vertex "provider.random (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:06 [TRACE] vertex "provider.random (close)": evaluating
2021/04/02 17:59:06 [TRACE] [walkRefresh] Entering eval tree: provider.random (close)
2021/04/02 17:59:06 [TRACE] [walkRefresh] Exiting eval tree: local.cloudfront_origin_id
2021/04/02 17:59:06 [TRACE] vertex "local.cloudfront_origin_id": visit complete
2021/04/02 17:59:06 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:06 [TRACE] GRPCProvider: Close
2021-04-02T17:59:06.215-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112069
2021-04-02T17:59:06.215-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:06 [TRACE] [walkRefresh] Exiting eval tree: provider.random (close)
2021/04/02 17:59:06 [TRACE] vertex "provider.random (close)": visit complete
2021-04-02T17:59:06.215-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/04/02 17:59:06 [TRACE] GRPCProvider: Configure
2021-04-02T17:59:06.326-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:06 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-04-02T17:59:06.326-0300
2021-04-02T17:59:06.326-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:06 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-02T17:59:06.326-0300
2021-04-02T17:59:07.054-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-02T17:59:07.053-0300
2021/04/02 17:59:07 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2021/04/02 17:59:07 [TRACE] vertex "provider.aws": visit complete
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": expanding dynamic subgraph
2021/04/02 17:59:07 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:07 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": expanding dynamic subgraph
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": expanding dynamic subgraph
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:07 [DEBUG] Resource state not found for node "aws_cloudfront_cache_policy.auth-header-cache-policy", instance aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_vpc.main-vpc"
2021/04/02 17:59:07 [TRACE] vertex "aws_vpc.main-vpc": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:07 [TRACE] vertex "aws_vpc.main-vpc": expanding dynamic subgraph
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_role.lambda-iam-role": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_role.lambda-iam-role": expanding dynamic subgraph
2021/04/02 17:59:07 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" references: []
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": entering dynamic subgraph
2021/04/02 17:59:07 [TRACE] dag/walk: updating graph
2021/04/02 17:59:07 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:07 [TRACE] NodeRefreshableManagedResourceInstance: aws_cloudfront_cache_policy.auth-header-cache-policy has no existing state to refresh
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": evaluating
2021/04/02 17:59:07 [TRACE] [walkRefresh] Entering eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:07 [TRACE] EvalReadState: reading state for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] EvalReadState: no state present for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:07 [TRACE] Re-validating config for "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:07 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_rest_api.rest-api - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:07 [DEBUG] ReferenceTransformer: "aws_api_gateway_rest_api.rest-api" references: []
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:07 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": entering dynamic subgraph
2021/04/02 17:59:07 [TRACE] dag/walk: updating graph
2021/04/02 17:59:07 [TRACE] dag/walk: added new vertex: "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:07 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:07 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_rest_api.rest-api will be refreshed
2021/04/02 17:59:07 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": evaluating
2021/04/02 17:59:07 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:07 [TRACE] EvalReadState: reading state for aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:07 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_rest_api.rest-api is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:07 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:07 [DEBUG] ReferenceTransformer: "aws_iam_policy.ec2-lamdbda-handler" references: []
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": entering dynamic subgraph
2021/04/02 17:59:07 [TRACE] dag/walk: updating graph
2021/04/02 17:59:07 [TRACE] dag/walk: added new vertex: "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:07 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_policy.ec2-lamdbda-handler will be refreshed
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": evaluating
2021/04/02 17:59:07 [TRACE] [walkRefresh] Entering eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:07 [TRACE] EvalReadState: reading state for aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:07 [TRACE] UpgradeResourceState: schema version of aws_iam_policy.ec2-lamdbda-handler is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:07 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc.main-vpc - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:07 [DEBUG] ReferenceTransformer: "aws_vpc.main-vpc" references: []
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:07 [TRACE] vertex "aws_vpc.main-vpc": entering dynamic subgraph
2021/04/02 17:59:07 [TRACE] dag/walk: updating graph
2021/04/02 17:59:07 [TRACE] dag/walk: added new vertex: "aws_vpc.main-vpc"
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_vpc.main-vpc"
2021/04/02 17:59:07 [TRACE] vertex "aws_vpc.main-vpc": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:07 [TRACE] NodeRefreshableManagedResourceInstance: aws_vpc.main-vpc will be refreshed
2021/04/02 17:59:07 [TRACE] vertex "aws_vpc.main-vpc": evaluating
2021/04/02 17:59:07 [TRACE] [walkRefresh] Entering eval tree: aws_vpc.main-vpc
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:07 [TRACE] EvalReadState: reading state for aws_vpc.main-vpc
2021/04/02 17:59:07 [TRACE] UpgradeResourceState: schema version of aws_vpc.main-vpc is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:07 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.lambda-iam-role - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:07 [DEBUG] ReferenceTransformer: "aws_iam_role.lambda-iam-role" references: []
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:07 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:07 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_role.lambda-iam-role": entering dynamic subgraph
2021/04/02 17:59:07 [TRACE] dag/walk: updating graph
2021/04/02 17:59:07 [TRACE] dag/walk: added new vertex: "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:07 [TRACE] dag/walk: visiting "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_role.lambda-iam-role": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:07 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_role.lambda-iam-role will be refreshed
2021/04/02 17:59:07 [TRACE] vertex "aws_iam_role.lambda-iam-role": evaluating
2021/04/02 17:59:07 [TRACE] [walkRefresh] Entering eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:07 [TRACE] EvalReadState: reading state for aws_iam_role.lambda-iam-role
2021/04/02 17:59:07 [TRACE] UpgradeResourceState: schema version of aws_iam_role.lambda-iam-role is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:07 [TRACE] GRPCProvider: UpgradeResourceState
2021-04-02T17:59:07.834-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:07.834-0300
2021-04-02T17:59:07.834-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:07.834-0300
2021-04-02T17:59:07.835-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:07.835-0300
2021/04/02 17:59:07 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:07 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:07 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:07 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:07 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_cloudfront_cache_policy.auth-header-cache-policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .parameters_in_cache_key_and_forwarded_to_origin[0].cookies_config[0].cookies[0].items: planned value cty.NullVal(cty.Set(cty.String)) does not match config value cty.SetValEmpty(cty.String)
      - .parameters_in_cache_key_and_forwarded_to_origin[0].query_strings_config[0].query_strings[0].items: planned value cty.NullVal(cty.Set(cty.String)) does not match config value cty.SetValEmpty(cty.String)
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:07 [TRACE] EvalWriteState: recording 0 dependencies for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] EvalWriteState: writing current state object for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:07 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:07 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:07 [TRACE] EvalWriteDiff: recorded Create change for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] [walkRefresh] Exiting eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": visit complete
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": dynamic subgraph completed successfully
2021/04/02 17:59:07 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": visit complete
2021-04-02T17:59:07.838-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [DEBUG] Reading API Gateway g2v9xvhxh2: timestamp=2021-04-02T17:59:07.838-0300
2021-04-02T17:59:07.840-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [DEBUG] Getting IAM Policy: {
  PolicyArn: "arn:aws:iam::829560024531:policy/ec2-lamdbda-handler"
}: timestamp=2021-04-02T17:59:07.839-0300
2021-04-02T17:59:07.841-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:07 [DEBUG] Waiting for state to become: [success]: timestamp=2021-04-02T17:59:07.839-0300
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:08 [TRACE] EvalWriteState: recording 0 dependencies for aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:08 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:08 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": visit complete
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": dynamic subgraph completed successfully
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": visit complete
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_api_gateway_resource.proxy"
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": expanding dynamic subgraph
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": expanding dynamic subgraph
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_resource.proxy - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_api_gateway_resource.proxy" references: []
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": entering dynamic subgraph
2021/04/02 17:59:08 [TRACE] dag/walk: updating graph
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_api_gateway_resource.proxy"
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_api_gateway_resource.proxy"
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_resource.proxy will be refreshed
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": evaluating
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_api_gateway_resource.proxy
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_resource.proxy is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_method.proxy-root - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy-root" references: []
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": entering dynamic subgraph
2021/04/02 17:59:08 [TRACE] dag/walk: updating graph
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_method.proxy-root will be refreshed
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": evaluating
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_api_gateway_method.proxy-root
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_method.proxy-root is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:08.087-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Reading API Gateway Resource 9nv6nf: timestamp=2021-04-02T17:59:08.087-0300
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:08.088-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Reading API Gateway Method agm-g2v9xvhxh2-ovuca0jt5a-GET: timestamp=2021-04-02T17:59:08.088-0300
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:08 [TRACE] EvalWriteState: recording 1 dependencies for aws_api_gateway_resource.proxy
2021/04/02 17:59:08 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_resource.proxy
2021/04/02 17:59:08 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": visit complete
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": dynamic subgraph completed successfully
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_resource.proxy": visit complete
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy"
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": expanding dynamic subgraph
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_method.proxy - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy" references: []
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": entering dynamic subgraph
2021/04/02 17:59:08 [TRACE] dag/walk: updating graph
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy"
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy"
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_method.proxy will be refreshed
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": evaluating
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_api_gateway_method.proxy
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_method.proxy is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:08.229-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Reading API Gateway Method agm-g2v9xvhxh2-9nv6nf-GET: timestamp=2021-04-02T17:59:08.229-0300
2021-04-02T17:59:08.288-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Received API Gateway Method: {
  ApiKeyRequired: false,
  AuthorizationType: "NONE",
  HttpMethod: "GET",
  MethodIntegration: {
    CacheKeyParameters: [],
    CacheNamespace: "ovuca0jt5a",
    HttpMethod: "POST",
    PassthroughBehavior: "WHEN_NO_MATCH",
    RequestParameters: {

    },
    RequestTemplates: {

    },
    TimeoutInMillis: 29000,
    Type: "AWS_PROXY",
    Uri: "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:829560024531:function:lambda-function/invocations"
  },
  RequestParameters: {
    method.request.header.Authorization: true
  }
}: timestamp=2021-04-02T17:59:08.288-0300
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:08 [TRACE] EvalWriteState: recording 1 dependencies for aws_api_gateway_method.proxy-root
2021/04/02 17:59:08 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_method.proxy-root
2021/04/02 17:59:08 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": visit complete
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": dynamic subgraph completed successfully
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy-root": visit complete
2021-04-02T17:59:08.356-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Received API Gateway Method: {
  ApiKeyRequired: false,
  AuthorizationType: "NONE",
  HttpMethod: "GET",
  MethodIntegration: {
    CacheKeyParameters: [],
    CacheNamespace: "9nv6nf",
    HttpMethod: "POST",
    PassthroughBehavior: "WHEN_NO_MATCH",
    RequestParameters: {

    },
    RequestTemplates: {

    },
    TimeoutInMillis: 29000,
    Type: "AWS_PROXY",
    Uri: "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:829560024531:function:lambda-function/invocations"
  },
  RequestParameters: {
    method.request.header.Authorization: true
  }
}: timestamp=2021-04-02T17:59:08.356-0300
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:08 [TRACE] EvalWriteState: recording 2 dependencies for aws_api_gateway_method.proxy
2021/04/02 17:59:08 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_method.proxy
2021/04/02 17:59:08 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": visit complete
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": dynamic subgraph completed successfully
2021/04/02 17:59:08 [TRACE] vertex "aws_api_gateway_method.proxy": visit complete
2021-04-02T17:59:08.514-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Getting IAM Policy Version: {
  PolicyArn: "arn:aws:iam::829560024531:policy/ec2-lamdbda-handler",
  VersionId: "v1"
}: timestamp=2021-04-02T17:59:08.514-0300
2021-04-02T17:59:08.514-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:08 [DEBUG] Waiting for state to become: [success]: timestamp=2021-04-02T17:59:08.514-0300
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:08 [TRACE] EvalWriteState: recording 0 dependencies for aws_vpc.main-vpc
2021/04/02 17:59:08 [TRACE] EvalWriteState: writing current state object for aws_vpc.main-vpc
2021/04/02 17:59:08 [TRACE] [walkRefresh] Exiting eval tree: aws_vpc.main-vpc
2021/04/02 17:59:08 [TRACE] vertex "aws_vpc.main-vpc": visit complete
2021/04/02 17:59:08 [TRACE] vertex "aws_vpc.main-vpc": dynamic subgraph completed successfully
2021/04/02 17:59:08 [TRACE] vertex "aws_vpc.main-vpc": visit complete
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_subnet.main-subnets"
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_security_group.lambda-function-sg"
2021/04/02 17:59:08 [TRACE] vertex "aws_security_group.lambda-function-sg": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:08 [TRACE] vertex "aws_security_group.lambda-function-sg": expanding dynamic subgraph
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.lambda-function-sg - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_security_group.lambda-function-sg" references: []
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets": expanding dynamic subgraph
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:08 [TRACE] vertex "aws_security_group.lambda-function-sg": entering dynamic subgraph
2021/04/02 17:59:08 [TRACE] dag/walk: updating graph
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_security_group.lambda-function-sg"
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_security_group.lambda-function-sg"
2021/04/02 17:59:08 [TRACE] vertex "aws_security_group.lambda-function-sg": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.lambda-function-sg will be refreshed
2021/04/02 17:59:08 [TRACE] vertex "aws_security_group.lambda-function-sg": evaluating
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_security_group.lambda-function-sg
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_internet_gateway.main-gw"
2021/04/02 17:59:08 [TRACE] vertex "aws_internet_gateway.main-gw": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:08 [TRACE] vertex "aws_internet_gateway.main-gw": expanding dynamic subgraph
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_security_group.lambda-function-sg is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.main-subnets[0] - *terraform.NodeRefreshableManagedResourceInstance
  aws_subnet.main-subnets[1] - *terraform.NodeRefreshableManagedResourceInstance
  aws_subnet.main-subnets[2] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets[1]" references: []
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets[2]" references: []
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets[0]" references: []
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_subnet.main-subnets[0] - *terraform.NodeRefreshableManagedResourceInstance
  aws_subnet.main-subnets[1] - *terraform.NodeRefreshableManagedResourceInstance
  aws_subnet.main-subnets[2] - *terraform.NodeRefreshableManagedResourceInstance
  root - terraform.graphNodeRoot
    aws_subnet.main-subnets[0] - *terraform.NodeRefreshableManagedResourceInstance
    aws_subnet.main-subnets[1] - *terraform.NodeRefreshableManagedResourceInstance
    aws_subnet.main-subnets[2] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets": entering dynamic subgraph
2021/04/02 17:59:08 [TRACE] dag/walk: updating graph
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets[1]"
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets[2]"
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets[0]"
2021/04/02 17:59:08 [TRACE] dag/walk: added edge: "root" waiting on "aws_subnet.main-subnets[2]"
2021/04/02 17:59:08 [TRACE] dag/walk: added edge: "root" waiting on "aws_subnet.main-subnets[0]"
2021/04/02 17:59:08 [TRACE] dag/walk: added edge: "root" waiting on "aws_subnet.main-subnets[1]"
2021/04/02 17:59:08 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_subnet.main-subnets[1]"
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets[1]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.main-subnets[1] will be refreshed
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_subnet.main-subnets[2]"
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets[2]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_subnet.main-subnets[0]"
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.main-subnets[2] will be refreshed
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_subnet.main-subnets[0] will be refreshed
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets[2]": evaluating
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets[0]": evaluating
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.main-subnets[2]
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.main-subnets[0]
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] vertex "aws_subnet.main-subnets[1]": evaluating
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_subnet.main-subnets[1]
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_internet_gateway.main-gw - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [DEBUG] ReferenceTransformer: "aws_internet_gateway.main-gw" references: []
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_subnet.main-subnets[2]
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_subnet.main-subnets[0]
2021/04/02 17:59:08 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:08 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:08 [TRACE] vertex "aws_internet_gateway.main-gw": entering dynamic subgraph
2021/04/02 17:59:08 [TRACE] dag/walk: updating graph
2021/04/02 17:59:08 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.main-gw"
2021/04/02 17:59:08 [TRACE] dag/walk: visiting "aws_internet_gateway.main-gw"
2021/04/02 17:59:08 [TRACE] vertex "aws_internet_gateway.main-gw": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:08 [TRACE] NodeRefreshableManagedResourceInstance: aws_internet_gateway.main-gw will be refreshed
2021/04/02 17:59:08 [TRACE] vertex "aws_internet_gateway.main-gw": evaluating
2021/04/02 17:59:08 [TRACE] [walkRefresh] Entering eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_internet_gateway.main-gw
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_internet_gateway.main-gw is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_subnet.main-subnets[2] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_subnet.main-subnets[0] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] EvalReadState: reading state for aws_subnet.main-subnets[1]
2021/04/02 17:59:08 [TRACE] UpgradeResourceState: schema version of aws_subnet.main-subnets[1] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:08 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:08 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:08 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 1 dependencies for aws_internet_gateway.main-gw
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.main-gw
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:09 [TRACE] vertex "aws_internet_gateway.main-gw": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_internet_gateway.main-gw": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_internet_gateway.main-gw": visit complete
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_route_table.route-main"
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": expanding dynamic subgraph
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table.route-main - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_route_table.route-main" references: []
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": entering dynamic subgraph
2021/04/02 17:59:09 [TRACE] dag/walk: updating graph
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_route_table.route-main"
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_route_table.route-main"
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_route_table.route-main will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_route_table.route-main
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_route_table.route-main
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_route_table.route-main is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.main-subnets[1]
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_subnet.main-subnets[1]
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.main-subnets[1]
2021/04/02 17:59:09 [TRACE] vertex "aws_subnet.main-subnets[1]": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.main-subnets[0]
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_subnet.main-subnets[0]
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.main-subnets[0]
2021/04/02 17:59:09 [TRACE] vertex "aws_subnet.main-subnets[0]": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 1 dependencies for aws_security_group.lambda-function-sg
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_security_group.lambda-function-sg
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:09 [TRACE] vertex "aws_security_group.lambda-function-sg": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_security_group.lambda-function-sg": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_security_group.lambda-function-sg": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 1 dependencies for aws_subnet.main-subnets[2]
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_subnet.main-subnets[2]
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_subnet.main-subnets[2]
2021/04/02 17:59:09 [TRACE] vertex "aws_subnet.main-subnets[2]": visit complete
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:09 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:09 [TRACE] vertex "root": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_subnet.main-subnets": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_subnet.main-subnets": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 2 dependencies for aws_route_table.route-main
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_route_table.route-main
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_route_table.route-main
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table.route-main": visit complete
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": expanding dynamic subgraph
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc_endpoint.s3_endpoint - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main": expanding dynamic subgraph
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_vpc_endpoint.s3_endpoint" references: []
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": entering dynamic subgraph
2021/04/02 17:59:09 [TRACE] dag/walk: updating graph
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_vpc_endpoint.s3_endpoint will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_vpc_endpoint.s3_endpoint is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.assoc-table-main[0] - *terraform.NodeRefreshableManagedResourceInstance
  aws_route_table_association.assoc-table-main[1] - *terraform.NodeRefreshableManagedResourceInstance
  aws_route_table_association.assoc-table-main[2] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main[0]" references: []
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main[1]" references: []
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main[2]" references: []
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_route_table_association.assoc-table-main[0] - *terraform.NodeRefreshableManagedResourceInstance
  aws_route_table_association.assoc-table-main[1] - *terraform.NodeRefreshableManagedResourceInstance
  aws_route_table_association.assoc-table-main[2] - *terraform.NodeRefreshableManagedResourceInstance
  root - terraform.graphNodeRoot
    aws_route_table_association.assoc-table-main[0] - *terraform.NodeRefreshableManagedResourceInstance
    aws_route_table_association.assoc-table-main[1] - *terraform.NodeRefreshableManagedResourceInstance
    aws_route_table_association.assoc-table-main[2] - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main": entering dynamic subgraph
2021/04/02 17:59:09 [TRACE] dag/walk: updating graph
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:09 [TRACE] dag/walk: added edge: "root" waiting on "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:09 [TRACE] dag/walk: added edge: "root" waiting on "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:09 [TRACE] dag/walk: added edge: "root" waiting on "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:09 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[0]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_route_table_association.assoc-table-main[0] will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[0]": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_route_table_association.assoc-table-main[0] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[1]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_route_table_association.assoc-table-main[1] will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[1]": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_route_table_association.assoc-table-main[1] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[2]": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_route_table_association.assoc-table-main[2] will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[2]": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_route_table_association.assoc-table-main[2] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:09.234-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [DEBUG] Reading VPC Endpoint: vpce-00d7ba430c9c966b5: timestamp=2021-04-02T17:59:09.234-0300
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 4 dependencies for aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[1]": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 4 dependencies for aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[2]": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 4 dependencies for aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main[0]": visit complete
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:09 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:09 [TRACE] vertex "root": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_route_table_association.assoc-table-main": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 3 dependencies for aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": visit complete
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:09 [TRACE] EvalWriteState: recording 0 dependencies for aws_iam_role.lambda-iam-role
2021/04/02 17:59:09 [TRACE] EvalWriteState: writing current state object for aws_iam_role.lambda-iam-role
2021/04/02 17:59:09 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role.lambda-iam-role": visit complete
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role.lambda-iam-role": dynamic subgraph completed successfully
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role.lambda-iam-role": visit complete
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function"
2021/04/02 17:59:09 [TRACE] vertex "aws_lambda_function.lambda-function": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:09 [TRACE] vertex "aws_lambda_function.lambda-function": expanding dynamic subgraph
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lambda_function.lambda-function - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function" references: []
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:09 [TRACE] vertex "aws_lambda_function.lambda-function": entering dynamic subgraph
2021/04/02 17:59:09 [TRACE] dag/walk: updating graph
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function"
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function"
2021/04/02 17:59:09 [TRACE] vertex "aws_lambda_function.lambda-function": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_lambda_function.lambda-function will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_lambda_function.lambda-function": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_lambda_function.lambda-function
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_lambda_function.lambda-function is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": expanding dynamic subgraph
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:09 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.attach-role-policy" references: []
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:09 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:09 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": entering dynamic subgraph
2021/04/02 17:59:09 [TRACE] dag/walk: updating graph
2021/04/02 17:59:09 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:09 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:09 [TRACE] NodeRefreshableManagedResourceInstance: aws_iam_role_policy_attachment.attach-role-policy will be refreshed
2021/04/02 17:59:09 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": evaluating
2021/04/02 17:59:09 [TRACE] [walkRefresh] Entering eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:09 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:09 [TRACE] UpgradeResourceState: schema version of aws_iam_role_policy_attachment.attach-role-policy is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:09 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:09 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:09 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:09.830-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [DEBUG] Fetching Lambda Function: lambda-function: timestamp=2021-04-02T17:59:09.829-0300
2021-04-02T17:59:09.980-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [INFO] Setting Lambda lambda-function file system configs []map[string]interface {}{} from API: timestamp=2021-04-02T17:59:09.980-0300
2021-04-02T17:59:09.980-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [INFO] Setting Lambda lambda-function package type (*string)(0xc001abf160) from API: timestamp=2021-04-02T17:59:09.980-0300
2021-04-02T17:59:09.980-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [INFO] Setting Lambda lambda-function Image config []map[string]interface {}(nil) from API: timestamp=2021-04-02T17:59:09.980-0300
2021-04-02T17:59:09.980-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [INFO] Setting Lambda lambda-function Layers []interface {}{} from API: timestamp=2021-04-02T17:59:09.980-0300
2021-04-02T17:59:09.980-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [INFO] Setting Lambda lambda-function VPC config []map[string]interface {}{map[string]interface {}{"security_group_ids":*Set(map[string]interface {}{"817580560":"sg-0a1fe9ca449ff7ba6"}), "subnet_ids":*Set(map[string]interface {}{"2123148895":"subnet-0259410bbd2085aa0", "403801629":"subnet-0d41dd5830fdb7806", "830200585":"subnet-0088af854a2ce365b"}), "vpc_id":"vpc-0fff27ad0c27cc62a"}} from API: timestamp=2021-04-02T17:59:09.980-0300
2021-04-02T17:59:09.980-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:09 [INFO] Setting Lambda lambda-function environment []interface {}{map[string]interface {}{"variables":map[string]string{"API_SECRET_TOKEN":"a80ac2ff00a5468da81693a27e0c4ebf", "API_STAGE":"development"}}} from API: timestamp=2021-04-02T17:59:09.980-0300
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 4 dependencies for aws_lambda_function.lambda-function
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_lambda_function.lambda-function
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_function.lambda-function": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_function.lambda-function": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_function.lambda-function": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "output.lambda_function_arn"
2021/04/02 17:59:10 [TRACE] vertex "output.lambda_function_arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda"
2021/04/02 17:59:10 [TRACE] vertex "output.lambda_function_arn": evaluating
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: output.lambda_function_arn
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_integration.lambda - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda"
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:10 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_integration.lambda will be refreshed
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:10 [TRACE] EvalReadState: reading state for aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_integration.lambda is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:10 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lambda_permission.api-gateway-permission - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_lambda_permission.api-gateway-permission" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:10 [TRACE] NodeRefreshableManagedResourceInstance: aws_lambda_permission.api-gateway-permission will be refreshed
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:10 [TRACE] EvalReadState: reading state for aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [TRACE] UpgradeResourceState: schema version of aws_lambda_permission.api-gateway-permission is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:10 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving value for output.lambda_function_arn in state
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving Create change for output.lambda_function_arn in changeset
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: output.lambda_function_arn
2021/04/02 17:59:10 [TRACE] vertex "output.lambda_function_arn": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_integration.lambda-root - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda-root" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:10 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_integration.lambda-root will be refreshed
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:10 [TRACE] EvalReadState: reading state for aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_integration.lambda-root is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:10 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:10 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:10 [TRACE] GRPCProvider: ReadResource
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefresh
2021-04-02T17:59:10.200-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Looking for Lambda permission: {
  FunctionName: "lambda-function"
}: timestamp=2021-04-02T17:59:10.199-0300
2021-04-02T17:59:10.200-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Waiting for state to become: [success]: timestamp=2021-04-02T17:59:10.199-0300
2021-04-02T17:59:10.200-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Reading API Gateway Integration: agi-g2v9xvhxh2-9nv6nf-GET: timestamp=2021-04-02T17:59:10.199-0300
2021/04/02 17:59:10 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:10.201-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Reading API Gateway Integration: agi-g2v9xvhxh2-ovuca0jt5a-GET: timestamp=2021-04-02T17:59:10.200-0300
2021-04-02T17:59:10.290-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Received 1 statements in Lambda policy: [{map[ArnLike:map[AWS:SourceArn:arn:aws:execute-api:sa-east-1:829560024531:g2v9xvhxh2/*/*]] lambda:InvokeFunction arn:aws:lambda:sa-east-1:829560024531:function:lambda-function Allow map[Service:apigateway.amazonaws.com] AllowAPIGatewayInvoke}]: timestamp=2021-04-02T17:59:10.290-0300
2021-04-02T17:59:10.290-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [ERR] Error getting Lambda Qualifier: Invalid ARN or otherwise unable to get qualifier from ARN ("arn:aws:lambda:sa-east-1:829560024531:function:lambda-function"): timestamp=2021-04-02T17:59:10.290-0300
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 6 dependencies for aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": visit complete
2021-04-02T17:59:10.328-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Received API Gateway Integration: {
  CacheKeyParameters: [],
  CacheNamespace: "ovuca0jt5a",
  HttpMethod: "POST",
  PassthroughBehavior: "WHEN_NO_MATCH",
  RequestParameters: {

  },
  RequestTemplates: {

  },
  TimeoutInMillis: 29000,
  Type: "AWS_PROXY",
  Uri: "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:829560024531:function:lambda-function/invocations"
}: timestamp=2021-04-02T17:59:10.328-0300
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 7 dependencies for aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda-root": visit complete
2021-04-02T17:59:10.331-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Received API Gateway Integration: {
  CacheKeyParameters: [],
  CacheNamespace: "9nv6nf",
  HttpMethod: "POST",
  PassthroughBehavior: "WHEN_NO_MATCH",
  RequestParameters: {

  },
  RequestTemplates: {

  },
  TimeoutInMillis: 29000,
  Type: "AWS_PROXY",
  Uri: "arn:aws:apigateway:sa-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:sa-east-1:829560024531:function:lambda-function/invocations"
}: timestamp=2021-04-02T17:59:10.331-0300
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 8 dependencies for aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_integration.lambda": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_deployment.api-gateway-deployment" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:10 [TRACE] NodeRefreshableManagedResourceInstance: aws_api_gateway_deployment.api-gateway-deployment will be refreshed
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:10 [TRACE] EvalReadState: reading state for aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_deployment.api-gateway-deployment is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:10 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefreshDependencies
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalRefresh
2021/04/02 17:59:10 [TRACE] GRPCProvider: ReadResource
2021-04-02T17:59:10.333-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Reading API Gateway Deployment tgeqhq: timestamp=2021-04-02T17:59:10.333-0300
2021-04-02T17:59:10.445-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [DEBUG] Received API Gateway Deployment: {
  CreatedDate: 2021-04-02 20:35:38 +0000 UTC,
  Id: "tgeqhq"
}: timestamp=2021-04-02T17:59:10.445-0300
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 11 dependencies for aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "output.api_gateway_invoke_url"
2021/04/02 17:59:10 [TRACE] vertex "output.api_gateway_invoke_url": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:10 [TRACE] vertex "output.api_gateway_invoke_url": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "local.api_gateway_domain"
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] vertex "local.api_gateway_domain": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:10 [TRACE] vertex "local.api_gateway_domain": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: local.api_gateway_domain
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving value for output.api_gateway_invoke_url in state
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving Create change for output.api_gateway_invoke_url in changeset
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:10 [TRACE] vertex "output.api_gateway_invoke_url": visit complete
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: local.api_gateway_domain
2021/04/02 17:59:10 [TRACE] vertex "local.api_gateway_domain": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [DEBUG] Resource instance state not found for node "aws_cloudfront_distribution.api-gateway-distribution", instance aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:10 [TRACE] NodeRefreshableManagedResourceInstance: aws_cloudfront_distribution.api-gateway-distribution has no existing state to refresh
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:10 [TRACE] EvalReadState: reading state for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] EvalReadState: no state present for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:10 [TRACE] Re-validating config for "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:10.450-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:10.450-0300
2021-04-02T17:59:10.450-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:10 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:10.450-0300
2021/04/02 17:59:10 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:10 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_cloudfront_distribution.api-gateway-distribution, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .http_version: planned value cty.StringVal("http2") does not match config value cty.NullVal(cty.String)
      - .retain_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .default_cache_behavior[0].compress: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .default_cache_behavior[0].min_ttl: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .default_cache_behavior[0].forwarded_values: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .viewer_certificate[0].minimum_protocol_version: planned value cty.StringVal("TLSv1") does not match config value cty.NullVal(cty.String)
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 14 dependencies for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:10 [TRACE] EvalWriteDiff: recorded Create change for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:10 [TRACE] vertex "output.cloudfront_hosted_zone_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:10 [TRACE] vertex "output.cloudfront_hosted_zone_id": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: output.cloudfront_hosted_zone_id
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": starting visit (*terraform.NodeRefreshableDataResource)
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "output.cloudfront_domain_name"
2021/04/02 17:59:10 [TRACE] vertex "output.cloudfront_domain_name": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:10 [TRACE] vertex "output.cloudfront_domain_name": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: output.cloudfront_domain_name
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_route53_zone.root_zone - *terraform.NodeRefreshableDataResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [DEBUG] Resource instance state not found for node "data.aws_route53_zone.root_zone", instance data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Removing output.cloudfront_hosted_zone_id from state (it is now null)
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Removing output.cloudfront_domain_name from state (it is now null)
2021/04/02 17:59:10 [TRACE] EvalWriteState: removing state object for data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadData
2021/04/02 17:59:10 [TRACE] EvalReadData: working on data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] EvalReadData: data.aws_route53_zone.root_zone configuration is fully known, but we're forcing a read plan to be created
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving Create change for output.cloudfront_hosted_zone_id in changeset
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: output.cloudfront_hosted_zone_id
2021/04/02 17:59:10 [TRACE] vertex "output.cloudfront_hosted_zone_id": visit complete
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving Create change for output.cloudfront_domain_name in changeset
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: output.cloudfront_domain_name
2021/04/02 17:59:10 [TRACE] vertex "output.cloudfront_domain_name": visit complete
2021/04/02 17:59:10 [TRACE] EvalWriteDiff: recorded Read change for data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": visit complete
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "data.aws_route53_zone.root_zone": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": starting visit (*terraform.NodeRefreshableManagedResource)
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": expanding dynamic subgraph
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.a_record - *terraform.NodeRefreshableManagedResourceInstance
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [DEBUG] Resource instance state not found for node "aws_route53_record.a_record", instance aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": entering dynamic subgraph
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2021/04/02 17:59:10 [TRACE] NodeRefreshableManagedResourceInstance: aws_route53_record.a_record has no existing state to refresh
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:10 [TRACE] EvalReadState: reading state for aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] EvalReadState: no state present for aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:10 [TRACE] Re-validating config for "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:10 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 15 dependencies for aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:10 [TRACE] EvalWriteDiff: recorded Create change for aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_route53_record.a_record": visit complete
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:10 [TRACE] EvalWriteState: recording 2 dependencies for aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:10 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:10 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": visit complete
2021/04/02 17:59:10 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": dynamic subgraph completed successfully
2021/04/02 17:59:10 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/04/02 17:59:10 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:10 [TRACE] vertex "provider.aws (close)": evaluating
2021/04/02 17:59:10 [TRACE] [walkRefresh] Entering eval tree: provider.aws (close)
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:10 [TRACE] GRPCProvider: Close
2021-04-02T17:59:10.693-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:10.696-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112078
2021-04-02T17:59:10.696-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:10 [TRACE] [walkRefresh] Exiting eval tree: provider.aws (close)
2021/04/02 17:59:10 [TRACE] vertex "provider.aws (close)": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:10 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:10 [TRACE] vertex "root": visit complete
2021/04/02 17:59:10 [INFO] backend/local: apply calling Plan
2021/04/02 17:59:10 [INFO] terraform: building graph: GraphTypePlan
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/02 17:59:10 [TRACE] ConfigTransformer: Starting for path: 
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  random_string.random - *terraform.NodePlannableResource
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  random_string.random - *terraform.NodePlannableResource
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  random_string.random - *terraform.NodePlannableResource
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.StateTransformer
2021/04/02 17:59:10 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodePlannableResource) config from iam.tf:21,1-48
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodePlannableResource) config from iam.tf:45,1-63
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_function.lambda-function" (*terraform.NodePlannableResource) config from lambda.tf:1,1-49
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.a_record" (*terraform.NodePlannableResource) config from route_53.tf:6,1-41
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.main-subnets" (*terraform.NodePlannableResource) config from vpc.tf:13,1-37
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_rest_api.rest-api" (*terraform.NodePlannableResource) config from api_gateway.tf:2,1-47
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.root_zone" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"route_53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:36, Byte:35}}
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_resource.proxy" (*terraform.NodePlannableResource) config from api_gateway.tf:35,1-44
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodePlannableResource) config from cloudfront.tf:65,1-66
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy-root" (*terraform.NodePlannableResource) config from api_gateway.tf:12,1-47
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodePlannableResource) config from cloudfront.tf:6,1-66
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.route-main" (*terraform.NodePlannableResource) config from vpc.tf:29,1-40
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda" (*terraform.NodePlannableResource) config from api_gateway.tf:53,1-48
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodePlannableResource) config from api_gateway.tf:64,1-63
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda-root" (*terraform.NodePlannableResource) config from api_gateway.tf:24,1-53
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy" (*terraform.NodePlannableResource) config from api_gateway.tf:41,1-42
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.main-gw" (*terraform.NodePlannableResource) config from vpc.tf:25,1-42
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "random_string.random" (*terraform.NodePlannableResource) config from cloudfront.tf:1,1-34
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_permission.api-gateway-permission" (*terraform.NodePlannableResource) config from lambda.tf:31,1-58
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.main-vpc" (*terraform.NodePlannableResource) config from vpc.tf:1,1-30
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc_endpoint.s3_endpoint" (*terraform.NodePlannableResource) config from vpc_endpoint.tf:2,1-42
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.lambda-function-sg" (*terraform.NodePlannableResource) config from security_groups.tf:1,1-51
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.lambda-iam-role" (*terraform.NodePlannableResource) config from iam.tf:1,1-42
2021/04/02 17:59:10 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.assoc-table-main" (*terraform.NodePlannableResource) config from vpc.tf:42,1-58
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  random_string.random - *terraform.NodePlannableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/04/02 17:59:10 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:1,1-15
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodePlannableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/04/02 17:59:10 [DEBUG] adding implicit provider configuration provider.random, implied first by random_string.random
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodePlannableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_subnet.main-subnets is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_rest_api.rest-api is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: data.aws_route53_zone.root_zone is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_resource.proxy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy-root is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_cloudfront_distribution.api-gateway-distribution is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_route_table.route-main is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_deployment.api-gateway-deployment is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda-root is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_lambda_permission.api-gateway-permission is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_internet_gateway.main-gw is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: random_string.random is provided by provider.random or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_iam_role.lambda-iam-role is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_route_table_association.assoc-table-main is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_vpc.main-vpc is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_vpc_endpoint.s3_endpoint is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_security_group.lambda-function-sg is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_iam_policy.ec2-lamdbda-handler is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_iam_role_policy_attachment.attach-role-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_lambda_function.lambda-function is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: aws_route53_record.a_record is provided by provider.aws or inherited equivalent
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.random serving random_string.random
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "random_string.random" (*terraform.NodePlannableResource) needs provider.random
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_vpc_endpoint.s3_endpoint" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_function.lambda-function
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_lambda_function.lambda-function" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.a_record
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_route53_record.a_record" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "data.aws_route53_zone.root_zone" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.main-gw
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_internet_gateway.main-gw" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table_association.assoc-table-main
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_route_table_association.assoc-table-main" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.main-subnets
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_subnet.main-subnets" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_rest_api.rest-api" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.main-vpc
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_vpc.main-vpc" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.lambda-function-sg
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_security_group.lambda-function-sg" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda-root" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table.route-main
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_route_table.route-main" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_lambda_permission.api-gateway-permission" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.lambda-iam-role
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_iam_role.lambda-iam-role" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_resource.proxy
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_resource.proxy" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy-root
2021/04/02 17:59:10 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy-root" (*terraform.NodePlannableResource) needs provider.aws
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/04/02 17:59:10 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.a_record
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_function.lambda-function
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.root_zone
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.main-subnets
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_resource.proxy
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.route-main
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy-root
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda-root
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to random_string.random
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.random
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.main-gw
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.lambda-function-sg
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.lambda-iam-role
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.assoc-table-main
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.main-vpc
2021/04/02 17:59:10 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_iam_policy.ec2-lamdbda-handler" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "output.cloudfront_domain_name" references: [aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.attach-role-policy" references: [aws_iam_policy.ec2-lamdbda-handler aws_iam_role.lambda-iam-role]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function" references: [aws_security_group.lambda-function-sg aws_iam_role.lambda-iam-role var.api_secret_token var.api_stage aws_subnet.main-subnets aws_security_group.lambda-function-sg]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record" references: [data.aws_route53_zone.root_zone aws_cloudfront_distribution.api-gateway-distribution local.api_fqdn data.aws_route53_zone.root_zone aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "local.api_gateway_stage_path" references: [var.api_stage]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "output.api_fqdn" references: [local.api_fqdn]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets" references: [var.aws_az_names aws_vpc.main-vpc aws_vpc.main-vpc var.aws_az_names]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_rest_api.rest-api" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone" references: [aws_cloudfront_distribution.api-gateway-distribution var.domain]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "output.cloudfront_hosted_zone_id" references: [aws_cloudfront_distribution.api-gateway-distribution]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.aws_secret_key" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_resource.proxy" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.api_stage" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy-root" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution" references: [aws_api_gateway_deployment.api-gateway-deployment aws_cloudfront_cache_policy.auth-header-cache-policy var.api_stage local.api_fqdn local.api_gateway_stage_path local.api_gateway_domain local.cloudfront_origin_id aws_cloudfront_cache_policy.auth-header-cache-policy local.cloudfront_origin_id var.certificate_arn]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_route_table.route-main" references: [aws_vpc.main-vpc aws_internet_gateway.main-gw]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda" references: [aws_api_gateway_method.proxy aws_api_gateway_method.proxy aws_api_gateway_rest_api.rest-api aws_lambda_function.lambda-function]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_deployment.api-gateway-deployment" references: [aws_api_gateway_integration.lambda aws_api_gateway_integration.lambda-root aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api var.api_stage aws_api_gateway_resource.proxy aws_api_gateway_method.proxy aws_api_gateway_integration.lambda]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda-root" references: [aws_api_gateway_method.proxy-root aws_api_gateway_method.proxy-root aws_api_gateway_rest_api.rest-api aws_lambda_function.lambda-function]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "local.api_fqdn" references: [var.domain]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "local.api_gateway_domain" references: [var.api_stage aws_api_gateway_deployment.api-gateway-deployment]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "output.api_gateway_invoke_url" references: [aws_api_gateway_deployment.api-gateway-deployment]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.api_secret_token" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "provider.random" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy" references: [aws_api_gateway_rest_api.rest-api aws_api_gateway_resource.proxy]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_internet_gateway.main-gw" references: [aws_vpc.main-vpc]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "random_string.random" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_lambda_permission.api-gateway-permission" references: [aws_lambda_function.lambda-function aws_api_gateway_rest_api.rest-api aws_api_gateway_rest_api.rest-api aws_lambda_function.lambda-function]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "output.lambda_function_arn" references: [aws_lambda_function.lambda-function]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.aws_region" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.aws_secret_key var.aws_access_key var.aws_region]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.certificate_arn" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_vpc.main-vpc" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_vpc_endpoint.s3_endpoint" references: [aws_vpc.main-vpc aws_route_table.route-main aws_route_table.route-main aws_vpc.main-vpc]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_security_group.lambda-function-sg" references: [aws_vpc.main-vpc aws_vpc.main-vpc]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_iam_role.lambda-iam-role" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main" references: [var.aws_az_names aws_route_table.route-main aws_subnet.main-subnets]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "local.cloudfront_origin_id" references: [random_string.random]
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.domain" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.aws_access_key" references: []
2021/04/02 17:59:10 [DEBUG] ReferenceTransformer: "var.aws_az_names" references: []
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodePlannableResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodePlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodePlannableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_method.proxy" has CBD descendent "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_api_gateway_method.proxy" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_internet_gateway.main-gw" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "random_string.random" has CBD descendent "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "random_string.random" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_lambda_permission.api-gateway-permission" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_route_table_association.assoc-table-main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_vpc.main-vpc" has CBD descendent "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_vpc.main-vpc" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_vpc_endpoint.s3_endpoint" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_security_group.lambda-function-sg" (*terraform.NodePlannableResource) already has create_before_destroy set
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_iam_role.lambda-iam-role" has CBD descendent "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_iam_role.lambda-iam-role" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_iam_policy.ec2-lamdbda-handler" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_iam_role_policy_attachment.attach-role-policy" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_lambda_function.lambda-function" has CBD descendent "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_lambda_function.lambda-function" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_route53_record.a_record" (*terraform.NodePlannableResource) already has create_before_destroy set
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_subnet.main-subnets" has CBD descendent "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_subnet.main-subnets" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_rest_api.rest-api" has CBD descendent "aws_api_gateway_method.proxy"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_api_gateway_rest_api.rest-api" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "data.aws_route53_zone.root_zone" has CBD descendent "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "data.aws_route53_zone.root_zone" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_resource.proxy" has CBD descendent "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_api_gateway_resource.proxy" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" has CBD descendent "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_method.proxy-root" has CBD descendent "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_api_gateway_method.proxy-root" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_cloudfront_distribution.api-gateway-distribution" has CBD descendent "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_route_table.route-main" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_integration.lambda" has CBD descendent "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_api_gateway_integration.lambda" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_deployment.api-gateway-deployment" (*terraform.NodePlannableResource) already has create_before_destroy set
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: "aws_api_gateway_integration.lambda-root" has CBD descendent "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_api_gateway_integration.lambda-root" (*terraform.NodePlannableResource)
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodePlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodePlannableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodePlannableResource
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodePlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodePlannableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodePlannableResource
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/04/02 17:59:10 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResource
    aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy - *terraform.NodePlannableResource
    aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    var.certificate_arn - *terraform.NodeRootVariable
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
  aws_internet_gateway.main-gw - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_lambda_function.lambda-function - *terraform.NodePlannableResource
    aws_iam_role.lambda-iam-role - *terraform.NodePlannableResource
    aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResource
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  aws_route53_record.a_record - *terraform.NodePlannableResource
    data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
  aws_route_table.route-main - *terraform.NodePlannableResource
    aws_internet_gateway.main-gw - *terraform.NodePlannableResource
  aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
    aws_subnet.main-subnets - *terraform.NodePlannableResource
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
  aws_subnet.main-subnets - *terraform.NodePlannableResource
    aws_vpc.main-vpc - *terraform.NodePlannableResource
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc - *terraform.NodePlannableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    aws_route_table.route-main - *terraform.NodePlannableResource
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodePlannableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResource
    aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResource
    aws_route53_record.a_record - *terraform.NodePlannableResource
    aws_route_table_association.assoc-table-main - *terraform.NodePlannableResource
    aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResource
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    random_string.random - *terraform.NodePlannableResource
  random_string.random - *terraform.NodePlannableResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:10 [DEBUG] Starting graph walk: walkPlan
2021/04/02 17:59:10 [TRACE] dag/walk: updating graph
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "random_string.random"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.api_stage"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "provider.random (close)"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "local.api_gateway_domain"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.aws_region"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.domain"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_security_group.lambda-function-sg"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "local.cloudfront_origin_id"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "output.api_fqdn"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "local.api_gateway_stage_path"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_route_table.route-main"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "local.api_fqdn"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.aws_secret_key"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "provider.random"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "output.lambda_function_arn"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.certificate_arn"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "output.cloudfront_domain_name"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.api_secret_token"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "output.api_gateway_invoke_url"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.main-gw"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_vpc.main-vpc"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.aws_az_names"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "var.aws_access_key"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_resource.proxy"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:10 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_domain"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root" waiting on "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_cache_policy.auth-header-cache-policy" waiting on "provider.aws"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_vpc_endpoint.s3_endpoint" waiting on "aws_route_table.route-main"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_rest_api.rest-api" waiting on "provider.aws"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "output.api_fqdn" waiting on "local.api_fqdn"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.cloudfront_origin_id"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.lambda_function_arn"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets" waiting on "var.aws_az_names"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_route_table.route-main" waiting on "aws_internet_gateway.main-gw"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy" waiting on "aws_api_gateway_resource.proxy"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "output.api_gateway_invoke_url" waiting on "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.api_gateway_invoke_url"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda" waiting on "aws_api_gateway_method.proxy"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_vpc.main-vpc" waiting on "provider.aws"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "local.api_fqdn" waiting on "var.domain"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_secret_token"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_subnet.main-subnets"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_region"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.api_fqdn"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy-root" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "var.certificate_arn"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_resource.proxy" waiting on "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment" waiting on "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "output.lambda_function_arn" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy" waiting on "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main" waiting on "aws_route_table.route-main"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_iam_policy.ec2-lamdbda-handler" waiting on "provider.aws"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "root" waiting on "provider.random (close)"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "output.cloudfront_hosted_zone_id" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "local.cloudfront_origin_id" waiting on "random_string.random"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "random_string.random" waiting on "provider.random"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_iam_role.lambda-iam-role" waiting on "provider.aws"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_stage"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_secret_key"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_route53_record.a_record" waiting on "data.aws_route53_zone.root_zone"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment" waiting on "aws_api_gateway_integration.lambda"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy" waiting on "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_fqdn"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "data.aws_route53_zone.root_zone" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "output.cloudfront_domain_name" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cloudfront_domain_name"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_internet_gateway.main-gw" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "local.api_gateway_stage_path" waiting on "var.api_stage"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.random (close)" waiting on "random_string.random"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_security_group.lambda-function-sg" waiting on "aws_vpc.main-vpc"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main" waiting on "aws_subnet.main-subnets"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_security_group.lambda-function-sg"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_access_key"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "local.api_gateway_domain" waiting on "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:10 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_stage_path"
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_vpc_endpoint.s3_endpoint", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "local.api_fqdn", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda-root", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_resource.proxy", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "output.cloudfront_hosted_zone_id", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "output.cloudfront_domain_name", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "data.aws_route53_zone.root_zone", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.main-gw", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_route_table.route-main", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy-root", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy_attachment.attach-role-policy", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_iam_role.lambda-iam-role", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_distribution.api-gateway-distribution", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_vpc.main-vpc", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_route53_record.a_record", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "provider.random (close)", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_subnet.main-subnets", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_lambda_function.lambda-function", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_route_table_association.assoc-table-main", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "local.cloudfront_origin_id", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_cache_policy.auth-header-cache-policy", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_rest_api.rest-api", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "output.api_fqdn", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_lambda_permission.api-gateway-permission", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_deployment.api-gateway-deployment", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "random_string.random", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_security_group.lambda-function-sg", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "output.api_gateway_invoke_url", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "output.lambda_function_arn", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "aws_iam_policy.ec2-lamdbda-handler", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "local.api_gateway_stage_path", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: dependencies changed for "local.api_gateway_domain", sending new deps
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.aws_access_key"
2021/04/02 17:59:10 [TRACE] vertex "var.aws_access_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "var.aws_access_key": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.aws_access_key
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.aws_access_key
2021/04/02 17:59:10 [TRACE] vertex "var.aws_access_key": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.api_stage"
2021/04/02 17:59:10 [TRACE] vertex "var.api_stage": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "var.api_stage": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.api_stage
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.api_stage
2021/04/02 17:59:10 [TRACE] vertex "var.api_stage": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.aws_region"
2021/04/02 17:59:10 [TRACE] vertex "var.aws_region": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "var.aws_region": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.aws_region
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.aws_region
2021/04/02 17:59:10 [TRACE] vertex "var.aws_region": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.domain"
2021/04/02 17:59:10 [TRACE] vertex "var.domain": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "var.domain": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.domain
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.domain
2021/04/02 17:59:10 [TRACE] vertex "var.domain": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "local.api_fqdn"
2021/04/02 17:59:10 [TRACE] vertex "local.api_fqdn": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:10 [TRACE] vertex "local.api_fqdn": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: local.api_fqdn
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: local.api_fqdn
2021/04/02 17:59:10 [TRACE] vertex "local.api_fqdn": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "output.api_fqdn"
2021/04/02 17:59:10 [TRACE] vertex "output.api_fqdn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:10 [TRACE] vertex "output.api_fqdn": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: output.api_fqdn
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving value for output.api_fqdn in state
2021/04/02 17:59:10 [TRACE] EvalWriteOutput: Saving Create change for output.api_fqdn in changeset
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: output.api_fqdn
2021/04/02 17:59:10 [TRACE] vertex "output.api_fqdn": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.aws_secret_key"
2021/04/02 17:59:10 [TRACE] vertex "var.aws_secret_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "var.aws_secret_key": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.aws_secret_key
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.aws_secret_key
2021/04/02 17:59:10 [TRACE] vertex "var.aws_secret_key": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "provider.aws"
2021/04/02 17:59:10 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:10 [TRACE] vertex "provider.aws": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: provider.aws
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-04-02T17:59:10.711-0300 [INFO]  plugin: configuring client automatic mTLS
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.api_secret_token"
2021/04/02 17:59:10 [TRACE] vertex "var.api_secret_token": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "provider.random"
2021/04/02 17:59:10 [TRACE] vertex "provider.random": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.certificate_arn"
2021/04/02 17:59:10 [TRACE] vertex "var.certificate_arn": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "provider.random": evaluating
2021/04/02 17:59:10 [TRACE] vertex "var.certificate_arn": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.certificate_arn
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: provider.random
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] vertex "var.api_secret_token": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.certificate_arn
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.api_secret_token
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.api_secret_token
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/02 17:59:10 [TRACE] vertex "var.api_secret_token": visit complete
2021/04/02 17:59:10 [TRACE] vertex "var.certificate_arn": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "var.aws_az_names"
2021/04/02 17:59:10 [TRACE] vertex "var.aws_az_names": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:10 [TRACE] vertex "var.aws_az_names": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: var.aws_az_names
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: var.aws_az_names
2021/04/02 17:59:10 [TRACE] vertex "var.aws_az_names": visit complete
2021/04/02 17:59:10 [TRACE] dag/walk: visiting "local.api_gateway_stage_path"
2021/04/02 17:59:10 [TRACE] vertex "local.api_gateway_stage_path": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:10 [TRACE] vertex "local.api_gateway_stage_path": evaluating
2021/04/02 17:59:10 [TRACE] [walkPlan] Entering eval tree: local.api_gateway_stage_path
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:10 [TRACE] [walkPlan] Exiting eval tree: local.api_gateway_stage_path
2021/04/02 17:59:10 [TRACE] vertex "local.api_gateway_stage_path": visit complete
2021-04-02T17:59:10.733-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5]
2021-04-02T17:59:10.733-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112169
2021-04-02T17:59:10.733-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5
2021-04-02T17:59:10.781-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:10.781-0300
2021-04-02T17:59:10.827-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: plugin address: network=unix address=/tmp/plugin979525378 timestamp=2021-04-02T17:59:10.826-0300
2021-04-02T17:59:10.827-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:10 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/04/02 17:59:10 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:10 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:10 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/02 17:59:10 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/04/02 17:59:10 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:10.876-0300 [INFO]  plugin: configuring client automatic mTLS
2021-04-02T17:59:10.876-0300 [TRACE] plugin.stdio: waiting for stdio data
2021-04-02T17:59:10.902-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5]
2021-04-02T17:59:10.904-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112177
2021-04-02T17:59:10.904-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5
2021-04-02T17:59:10.908-0300 [INFO]  plugin.terraform-provider-random_v3.1.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:10.907-0300
2021-04-02T17:59:10.959-0300 [DEBUG] plugin.terraform-provider-random_v3.1.0_x5: plugin address: network=unix address=/tmp/plugin448571742 timestamp=2021-04-02T17:59:10.959-0300
2021-04-02T17:59:10.959-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:11 [TRACE] BuiltinEvalContext: Initialized "random" provider for provider.random
2021/04/02 17:59:11 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:11 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/02 17:59:11 [TRACE] buildProviderConfig for provider.random: no configuration at all
2021/04/02 17:59:11 [TRACE] GRPCProvider: GetSchema
2021/04/02 17:59:11 [TRACE] GRPCProvider: Configure
2021-04-02T17:59:11.035-0300 [TRACE] plugin.stdio: waiting for stdio data
2021-04-02T17:59:11.036-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:11 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-04-02T17:59:11.036-0300
2021-04-02T17:59:11.037-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:11 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-02T17:59:11.037-0300
2021/04/02 17:59:11 [TRACE] GRPCProvider: Configure
2021/04/02 17:59:11 [TRACE] [walkPlan] Exiting eval tree: provider.random
2021/04/02 17:59:11 [TRACE] vertex "provider.random": visit complete
2021/04/02 17:59:11 [TRACE] dag/walk: visiting "random_string.random"
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": evaluating
2021/04/02 17:59:11 [TRACE] [walkPlan] Entering eval tree: random_string.random
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:11 [TRACE] [walkPlan] Exiting eval tree: random_string.random
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": expanding dynamic subgraph
2021/04/02 17:59:11 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:11 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  random_string.random - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:11 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:11 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:11 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:11 [DEBUG] Resource instance state not found for node "random_string.random", instance random_string.random
2021/04/02 17:59:11 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:11 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:11 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:11 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:11 [DEBUG] ReferenceTransformer: "random_string.random" references: []
2021/04/02 17:59:11 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:11 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:11 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": entering dynamic subgraph
2021/04/02 17:59:11 [TRACE] dag/walk: updating graph
2021/04/02 17:59:11 [TRACE] dag/walk: added new vertex: "random_string.random"
2021/04/02 17:59:11 [TRACE] dag/walk: visiting "random_string.random"
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": evaluating
2021/04/02 17:59:11 [TRACE] [walkPlan] Entering eval tree: random_string.random
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:11 [TRACE] EvalReadState: reading state for random_string.random
2021/04/02 17:59:11 [TRACE] EvalReadState: no state present for random_string.random
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:11 [TRACE] Re-validating config for "random_string.random"
2021/04/02 17:59:11 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:11 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:11 [WARN] Provider "registry.terraform.io/-/random" produced an invalid plan for random_string.random, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:11 [TRACE] EvalWriteState: writing current state object for random_string.random
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:11 [TRACE] EvalWriteDiff: recorded Create change for random_string.random
2021/04/02 17:59:11 [TRACE] [walkPlan] Exiting eval tree: random_string.random
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": visit complete
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": dynamic subgraph completed successfully
2021/04/02 17:59:11 [TRACE] vertex "random_string.random": visit complete
2021/04/02 17:59:11 [TRACE] dag/walk: visiting "provider.random (close)"
2021/04/02 17:59:11 [TRACE] vertex "provider.random (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:11 [TRACE] vertex "provider.random (close)": evaluating
2021/04/02 17:59:11 [TRACE] [walkPlan] Entering eval tree: provider.random (close)
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:11 [TRACE] GRPCProvider: Close
2021/04/02 17:59:11 [TRACE] dag/walk: visiting "local.cloudfront_origin_id"
2021/04/02 17:59:11 [TRACE] vertex "local.cloudfront_origin_id": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:11 [TRACE] vertex "local.cloudfront_origin_id": evaluating
2021/04/02 17:59:11 [TRACE] [walkPlan] Entering eval tree: local.cloudfront_origin_id
2021/04/02 17:59:11 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:11 [TRACE] [walkPlan] Exiting eval tree: local.cloudfront_origin_id
2021/04/02 17:59:11 [TRACE] vertex "local.cloudfront_origin_id": visit complete
2021-04-02T17:59:11.055-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:11.055-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112177
2021-04-02T17:59:11.055-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:11 [TRACE] [walkPlan] Exiting eval tree: provider.random (close)
2021/04/02 17:59:11 [TRACE] vertex "provider.random (close)": visit complete
2021-04-02T17:59:11.705-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:11 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-02T17:59:11.704-0300
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2021/04/02 17:59:12 [TRACE] vertex "provider.aws": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": evaluating
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": evaluating
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role.lambda-iam-role - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_vpc.main-vpc"
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_iam_role.lambda-iam-role" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_iam_role.lambda-iam-role is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_policy.ec2-lamdbda-handler - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_iam_policy.ec2-lamdbda-handler" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_iam_policy.ec2-lamdbda-handler is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_rest_api.rest-api - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_rest_api.rest-api" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc.main-vpc - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_vpc.main-vpc" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_vpc.main-vpc"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_vpc.main-vpc"
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_vpc.main-vpc is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_rest_api.rest-api is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [DEBUG] Resource instance state not found for node "aws_cloudfront_cache_policy.auth-header-cache-policy", instance aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] EvalReadState: no state present for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_iam_policy.ec2-lamdbda-handler"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_iam_role.lambda-iam-role"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:12.466-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.466-0300
2021-04-02T17:59:12.466-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.466-0300
2021-04-02T17:59:12.466-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.466-0300
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_vpc.main-vpc"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_rest_api.rest-api"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_iam_policy.ec2-lamdbda-handler
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_rest_api.rest-api
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": visit complete
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_vpc.main-vpc
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_rest_api.rest-api": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc.main-vpc": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_internet_gateway.main-gw"
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_internet_gateway.main-gw - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_internet_gateway.main-gw" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_subnet.main-subnets"
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets": evaluating
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.main-gw"
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_subnet.main-subnets
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_internet_gateway.main-gw"
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_internet_gateway.main-gw is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.main-subnets
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_subnet.main-subnets[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.main-subnets[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.main-subnets[2] - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_security_group.lambda-function-sg"
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_resource.proxy"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": evaluating
2021/04/02 17:59:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_cloudfront_cache_policy.auth-header-cache-policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .parameters_in_cache_key_and_forwarded_to_origin[0].cookies_config[0].cookies[0].items: planned value cty.NullVal(cty.Set(cty.String)) does not match config value cty.SetValEmpty(cty.String)
      - .parameters_in_cache_key_and_forwarded_to_origin[0].query_strings_config[0].query_strings[0].items: planned value cty.NullVal(cty.Set(cty.String)) does not match config value cty.SetValEmpty(cty.String)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets[0]" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets[1]" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets[2]" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_subnet.main-subnets[0] - *terraform.NodePlannableResourceInstance
  aws_subnet.main-subnets[1] - *terraform.NodePlannableResourceInstance
  aws_subnet.main-subnets[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_subnet.main-subnets[0] - *terraform.NodePlannableResourceInstance
    aws_subnet.main-subnets[1] - *terraform.NodePlannableResourceInstance
    aws_subnet.main-subnets[2] - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets[1]"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets[2]"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets[0]"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "aws_subnet.main-subnets[0]"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "aws_subnet.main-subnets[1]"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "aws_subnet.main-subnets[2]"
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_subnet.main-subnets[0]"
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[0]": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_subnet.main-subnets[0]
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_subnet.main-subnets[1]"
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[1]": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_subnet.main-subnets[1]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_subnet.main-subnets[2]"
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[2]": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_subnet.main-subnets[2]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_subnet.main-subnets[2]
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_resource.proxy - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_subnet.main-subnets[1]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_subnet.main-subnets[0]
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_resource.proxy" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_resource.proxy"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_resource.proxy"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_subnet.main-subnets[1] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_subnet.main-subnets[0] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_security_group.lambda-function-sg - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_subnet.main-subnets[2] is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_security_group.lambda-function-sg" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_resource.proxy is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_security_group.lambda-function-sg"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_security_group.lambda-function-sg"
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_security_group.lambda-function-sg is still 1; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role.lambda-iam-role
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role.lambda-iam-role": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_method.proxy-root - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": expanding dynamic subgraph
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy-root" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_method.proxy-root is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded Create change for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": visit complete
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_iam_role_policy_attachment.attach-role-policy - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.attach-role-policy" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_iam_role_policy_attachment.attach-role-policy is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_resource.proxy"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_subnet.main-subnets[2]"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_subnet.main-subnets[1]"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_security_group.lambda-function-sg"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_subnet.main-subnets[0]"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_iam_role_policy_attachment.attach-role-policy"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_method.proxy-root"
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_internet_gateway.main-gw"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_subnet.main-subnets[2]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021-04-02T17:59:12.490-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.490-0300
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.main-subnets[2]
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.main-subnets[2]
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[2]": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_subnet.main-subnets[1]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_resource.proxy
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_resource.proxy": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.main-subnets[1]
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.main-subnets[1]
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[1]": visit complete
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_internet_gateway.main-gw
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_internet_gateway.main-gw": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route_table.route-main"
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table.route-main - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route_table.route-main" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route_table.route-main"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route_table.route-main"
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_route_table.route-main is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_method.proxy - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_method.proxy is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_subnet.main-subnets[0]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_subnet.main-subnets[0]
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_subnet.main-subnets[0]
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets[0]": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:12 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:12 [TRACE] vertex "root": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_subnet.main-subnets": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_iam_role_policy_attachment.attach-role-policy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy": visit complete
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_method.proxy-root
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy-root": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_security_group.lambda-function-sg, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .egress: planned value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})}) does not match config value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.NullVal(cty.String), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.NullVal(cty.List(cty.String)), "prefix_list_ids":cty.NullVal(cty.List(cty.String)), "protocol":cty.StringVal("-1"), "security_groups":cty.NullVal(cty.Set(cty.String)), "self":cty.NullVal(cty.Bool), "to_port":cty.NumberIntVal(0)})}) nor prior value cty.SetVal([]cty.Value{cty.ObjectVal(map[string]cty.Value{"cidr_blocks":cty.ListVal([]cty.Value{cty.StringVal("0.0.0.0/0")}), "description":cty.StringVal(""), "from_port":cty.NumberIntVal(0), "ipv6_cidr_blocks":cty.ListValEmpty(cty.String), "prefix_list_ids":cty.ListValEmpty(cty.String), "protocol":cty.StringVal("-1"), "security_groups":cty.SetValEmpty(cty.String), "self":cty.False, "to_port":cty.NumberIntVal(0)})})
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.lambda-function-sg
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_security_group.lambda-function-sg": visit complete
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_route_table.route-main"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_method.proxy"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lambda_function.lambda-function - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-04-02T17:59:12.497-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.497-0300
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_lambda_function.lambda-function is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_method.proxy
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": visit complete
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route_table.route-main
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_method.proxy": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table.route-main": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main"
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": evaluating
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route_table_association.assoc-table-main
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_vpc_endpoint.s3_endpoint - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_vpc_endpoint.s3_endpoint" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_vpc_endpoint.s3_endpoint is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route_table_association.assoc-table-main
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route_table_association.assoc-table-main[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.assoc-table-main[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.assoc-table-main[2] - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main[0]" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main[1]" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main[2]" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_route_table_association.assoc-table-main[0] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.assoc-table-main[1] - *terraform.NodePlannableResourceInstance
  aws_route_table_association.assoc-table-main[2] - *terraform.NodePlannableResourceInstance
  root - terraform.graphNodeRoot
    aws_route_table_association.assoc-table-main[0] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.assoc-table-main[1] - *terraform.NodePlannableResourceInstance
    aws_route_table_association.assoc-table-main[2] - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[1]": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[1]": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_route_table_association.assoc-table-main[1] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[2]": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[2]": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_route_table_association.assoc-table-main[2] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[0]": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[0]": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_route_table_association.assoc-table-main[0] is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_route_table_association.assoc-table-main[1]"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_route_table_association.assoc-table-main[2]"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_vpc_endpoint.s3_endpoint"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_route_table_association.assoc-table-main[0]"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021-04-02T17:59:12.505-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.505-0300
2021-04-02T17:59:12.505-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.505-0300
2021-04-02T17:59:12.505-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.505-0300
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route_table_association.assoc-table-main[2]
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[2]": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route_table_association.assoc-table-main[0]
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[0]": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_vpc_endpoint.s3_endpoint
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_lambda_function.lambda-function, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .tracing_config: block count in plan (1) disagrees with count in config (0)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route_table_association.assoc-table-main[1]
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main[1]": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:12 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:12 [TRACE] vertex "root": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_route_table_association.assoc-table-main": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded Update change for aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_function.lambda-function": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_lambda_permission.api-gateway-permission - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_lambda_permission.api-gateway-permission" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": evaluating
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "output.lambda_function_arn"
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] vertex "output.lambda_function_arn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] vertex "output.lambda_function_arn": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: output.lambda_function_arn
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_integration.lambda - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_integration.lambda is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_lambda_permission.api-gateway-permission is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_integration.lambda-root - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving value for output.lambda_function_arn in state
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda-root" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving Create change for output.lambda_function_arn in changeset
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: output.lambda_function_arn
2021/04/02 17:59:12 [TRACE] vertex "output.lambda_function_arn": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_integration.lambda-root is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_lambda_permission.api-gateway-permission"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_integration.lambda"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_lambda_permission.api-gateway-permission
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_lambda_permission.api-gateway-permission": visit complete
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_integration.lambda-root"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_integration.lambda-root
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda-root": visit complete
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_integration.lambda
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_integration.lambda": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_deployment.api-gateway-deployment" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] UpgradeResourceState: schema version of aws_api_gateway_deployment.api-gateway-deployment is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:12 [TRACE] GRPCProvider: UpgradeResourceState
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_api_gateway_deployment.api-gateway-deployment"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded NoOp change for aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_api_gateway_deployment.api-gateway-deployment
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "output.api_gateway_invoke_url"
2021/04/02 17:59:12 [TRACE] vertex "output.api_gateway_invoke_url": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:12 [TRACE] vertex "output.api_gateway_invoke_url": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "local.api_gateway_domain"
2021/04/02 17:59:12 [TRACE] vertex "local.api_gateway_domain": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:12 [TRACE] vertex "local.api_gateway_domain": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: local.api_gateway_domain
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: local.api_gateway_domain
2021/04/02 17:59:12 [TRACE] vertex "local.api_gateway_domain": visit complete
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving value for output.api_gateway_invoke_url in state
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": evaluating
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving Create change for output.api_gateway_invoke_url in changeset
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:12 [TRACE] vertex "output.api_gateway_invoke_url": visit complete
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [DEBUG] Resource instance state not found for node "aws_cloudfront_distribution.api-gateway-distribution", instance aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] EvalReadState: no state present for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:12.522-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.522-0300
2021-04-02T17:59:12.522-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:12.522-0300
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_cloudfront_distribution.api-gateway-distribution, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .retain_on_delete: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .http_version: planned value cty.StringVal("http2") does not match config value cty.NullVal(cty.String)
      - .viewer_certificate[0].minimum_protocol_version: planned value cty.StringVal("TLSv1") does not match config value cty.NullVal(cty.String)
      - .default_cache_behavior[0].compress: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .default_cache_behavior[0].min_ttl: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .default_cache_behavior[0].forwarded_values: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded Create change for aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:12 [TRACE] vertex "output.cloudfront_hosted_zone_id": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:12 [TRACE] vertex "output.cloudfront_hosted_zone_id": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: output.cloudfront_hosted_zone_id
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Removing output.cloudfront_hosted_zone_id from state (it is now null)
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving Create change for output.cloudfront_hosted_zone_id in changeset
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: output.cloudfront_hosted_zone_id
2021/04/02 17:59:12 [TRACE] vertex "output.cloudfront_hosted_zone_id": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "data.aws_route53_zone.root_zone"
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  data.aws_route53_zone.root_zone - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [DEBUG] Resource instance state not found for node "data.aws_route53_zone.root_zone", instance data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone"
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "data.aws_route53_zone.root_zone"
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] EvalReadState: no state present for data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadData
2021/04/02 17:59:12 [TRACE] EvalReadData: working on data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] EvalReadData: data.aws_route53_zone.root_zone configuration is fully known, but we're forcing a read plan to be created
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded Read change for data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "output.cloudfront_domain_name"
2021/04/02 17:59:12 [TRACE] vertex "output.cloudfront_domain_name": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:12 [TRACE] vertex "output.cloudfront_domain_name": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: output.cloudfront_domain_name
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "data.aws_route53_zone.root_zone": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": starting visit (*terraform.NodePlannableResource)
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": expanding dynamic subgraph
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  aws_route53_record.a_record - *terraform.NodePlannableResourceInstance
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [DEBUG] Resource instance state not found for node "aws_route53_record.a_record", instance aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": entering dynamic subgraph
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Removing output.cloudfront_domain_name from state (it is now null)
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving Create change for output.cloudfront_domain_name in changeset
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: output.cloudfront_domain_name
2021/04/02 17:59:12 [TRACE] vertex "output.cloudfront_domain_name": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": starting visit (*terraform.NodePlannableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] EvalReadState: no state present for aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] EvalWriteDiff: recorded Create change for aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": visit complete
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": dynamic subgraph completed successfully
2021/04/02 17:59:12 [TRACE] vertex "aws_route53_record.a_record": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "provider.aws (close)"
2021/04/02 17:59:12 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:12 [TRACE] vertex "provider.aws (close)": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:12 [TRACE] GRPCProvider: Close
2021/04/02 17:59:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2021/04/02 17:59:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2021/04/02 17:59:12 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2021/04/02 17:59:12 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2021-04-02T17:59:12.542-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112169
2021-04-02T17:59:12.542-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:12 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2021/04/02 17:59:12 [TRACE] vertex "provider.aws (close)": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "root"
2021/04/02 17:59:12 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2021/04/02 17:59:12 [TRACE] vertex "root": visit complete
2021-04-02T17:59:12.542-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021/04/02 17:59:12 [INFO] backend/local: apply calling Apply
2021/04/02 17:59:12 [INFO] terraform: building graph: GraphTypeApply
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021/04/02 17:59:12 [TRACE] ConfigTransformer: Starting for path: 
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.DiffTransformer
2021/04/02 17:59:12 [TRACE] DiffTransformer starting
2021/04/02 17:59:12 [TRACE] DiffTransformer: found Create change for random_string.random 
2021/04/02 17:59:12 [TRACE] DiffTransformer: random_string.random will be represented by random_string.random
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_iam_policy.ec2-lamdbda-handler 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_rest_api.rest-api 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_vpc.main-vpc 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_iam_role.lambda-iam-role 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found Create change for aws_cloudfront_cache_policy.auth-header-cache-policy 
2021/04/02 17:59:12 [TRACE] DiffTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy will be represented by aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_subnet.main-subnets[2] 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_resource.proxy 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_subnet.main-subnets[1] 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_internet_gateway.main-gw 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_subnet.main-subnets[0] 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_iam_role_policy_attachment.attach-role-policy 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_method.proxy-root 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_security_group.lambda-function-sg 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_method.proxy 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_route_table.route-main 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_route_table_association.assoc-table-main[2] 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_route_table_association.assoc-table-main[0] 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_vpc_endpoint.s3_endpoint 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_route_table_association.assoc-table-main[1] 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found Update change for aws_lambda_function.lambda-function 
2021/04/02 17:59:12 [TRACE] DiffTransformer: aws_lambda_function.lambda-function will be represented by aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_lambda_permission.api-gateway-permission 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_integration.lambda-root 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_integration.lambda 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found NoOp change for aws_api_gateway_deployment.api-gateway-deployment 
2021/04/02 17:59:12 [TRACE] DiffTransformer: found Create change for aws_cloudfront_distribution.api-gateway-distribution 
2021/04/02 17:59:12 [TRACE] DiffTransformer: aws_cloudfront_distribution.api-gateway-distribution will be represented by aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] DiffTransformer: found Read change for data.aws_route53_zone.root_zone 
2021/04/02 17:59:12 [TRACE] DiffTransformer: data.aws_route53_zone.root_zone will be represented by data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] DiffTransformer: found Create change for aws_route53_record.a_record 
2021/04/02 17:59:12 [TRACE] DiffTransformer: aws_route53_record.a_record will be represented by aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] DiffTransformer complete
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc.main-vpc (prepare state)" (*terraform.NodeApplyableResource) config from vpc.tf:1,1-30
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role_policy_attachment.attach-role-policy (prepare state)" (*terraform.NodeApplyableResource) config from iam.tf:45,1-63
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "random_string.random (prepare state)" (*terraform.NodeApplyableResource) config from cloudfront.tf:1,1-34
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)" (*terraform.NodeApplyableResource) config from cloudfront.tf:65,1-66
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:53,1-48
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_distribution.api-gateway-distribution (prepare state)" (*terraform.NodeApplyableResource) config from cloudfront.tf:6,1-66
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy-root (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:12,1-47
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table_association.assoc-table-main (prepare state)" (*terraform.NodeApplyableResource) config from vpc.tf:42,1-58
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "random_string.random" (*terraform.NodeApplyableResourceInstance) config from cloudfront.tf:1,1-34
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_function.lambda-function" (*terraform.NodeApplyableResourceInstance) config from lambda.tf:1,1-49
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_subnet.main-subnets (prepare state)" (*terraform.NodeApplyableResource) config from vpc.tf:13,1-37
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.lambda-function-sg (prepare state)" (*terraform.NodeApplyableResource) config from security_groups.tf:1,1-51
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.a_record (prepare state)" (*terraform.NodeApplyableResource) config from route_53.tf:6,1-41
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.root_zone (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"route_53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:36, Byte:35}}
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_internet_gateway.main-gw (prepare state)" (*terraform.NodeApplyableResource) config from vpc.tf:25,1-42
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_vpc_endpoint.s3_endpoint (prepare state)" (*terraform.NodeApplyableResource) config from vpc_endpoint.tf:2,1-42
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_permission.api-gateway-permission (prepare state)" (*terraform.NodeApplyableResource) config from lambda.tf:31,1-58
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_rest_api.rest-api (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:2,1-47
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_integration.lambda-root (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:24,1-53
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_route53_zone.root_zone" (*terraform.NodeApplyableResourceInstance) config from hcl.Range{Filename:"route_53.tf", Start:hcl.Pos{Line:1, Column:1, Byte:0}, End:hcl.Pos{Line:1, Column:36, Byte:35}}
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_role.lambda-iam-role (prepare state)" (*terraform.NodeApplyableResource) config from iam.tf:1,1-42
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_deployment.api-gateway-deployment (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:64,1-63
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_resource.proxy (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:35,1-44
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_lambda_function.lambda-function (prepare state)" (*terraform.NodeApplyableResource) config from lambda.tf:1,1-49
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_api_gateway_method.proxy (prepare state)" (*terraform.NodeApplyableResource) config from api_gateway.tf:41,1-42
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_iam_policy.ec2-lamdbda-handler (prepare state)" (*terraform.NodeApplyableResource) config from iam.tf:21,1-48
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route_table.route-main (prepare state)" (*terraform.NodeApplyableResource) config from vpc.tf:29,1-40
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_route53_record.a_record" (*terraform.NodeApplyableResourceInstance) config from route_53.tf:6,1-41
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodeApplyableResourceInstance) config from cloudfront.tf:65,1-66
2021/04/02 17:59:12 [TRACE] AttachResourceConfigTransformer: attaching to "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodeApplyableResourceInstance) config from cloudfront.tf:6,1-66
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021/04/02 17:59:12 [DEBUG] Resource state not found for node "random_string.random", instance random_string.random
2021/04/02 17:59:12 [DEBUG] Resource state not found for node "data.aws_route53_zone.root_zone", instance data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [DEBUG] Resource state not found for node "aws_route53_record.a_record", instance aws_route53_record.a_record
2021/04/02 17:59:12 [DEBUG] Resource state not found for node "aws_cloudfront_cache_policy.auth-header-cache-policy", instance aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [DEBUG] Resource state not found for node "aws_cloudfront_distribution.api-gateway-distribution", instance aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.LocalTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.LocalTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.OutputTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021/04/02 17:59:12 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from provider.tf:1,1-15
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021/04/02 17:59:12 [DEBUG] adding implicit provider configuration provider.random, implied first by random_string.random (prepare state)
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy-root (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_route_table_association.assoc-table-main (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: random_string.random is provided by provider.random or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_lambda_function.lambda-function is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_subnet.main-subnets (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_security_group.lambda-function-sg (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_route53_record.a_record (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: data.aws_route53_zone.root_zone (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_internet_gateway.main-gw (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_vpc_endpoint.s3_endpoint (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_lambda_permission.api-gateway-permission (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_rest_api.rest-api (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda-root (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: data.aws_route53_zone.root_zone is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_iam_role.lambda-iam-role (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_deployment.api-gateway-deployment (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_resource.proxy (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_lambda_function.lambda-function (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_method.proxy (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_iam_policy.ec2-lamdbda-handler (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_route_table.route-main (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_route53_record.a_record is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_cloudfront_distribution.api-gateway-distribution is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_vpc.main-vpc (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_iam_role_policy_attachment.attach-role-policy (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: random_string.random (prepare state) is provided by provider.random or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_api_gateway_integration.lambda (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: aws_cloudfront_distribution.api-gateway-distribution (prepare state) is provided by provider.aws or inherited equivalent
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_deployment.api-gateway-deployment (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_deployment.api-gateway-deployment (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_function.lambda-function
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_lambda_function.lambda-function" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_route53_zone.root_zone (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "data.aws_route53_zone.root_zone (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_function.lambda-function (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_lambda_function.lambda-function (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_policy.ec2-lamdbda-handler (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_iam_policy.ec2-lamdbda-handler (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_cloudfront_distribution.api-gateway-distribution" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_method.proxy-root (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_method.proxy-root (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table_association.assoc-table-main (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_route_table_association.assoc-table-main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.random serving random_string.random
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "random_string.random" (*terraform.NodeApplyableResourceInstance) needs provider.random
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.lambda-function-sg (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_security_group.lambda-function-sg (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc_endpoint.s3_endpoint (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_vpc_endpoint.s3_endpoint (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role.lambda-iam-role (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_iam_role.lambda-iam-role (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_cloudfront_distribution.api-gateway-distribution (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_cloudfront_distribution.api-gateway-distribution (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_vpc.main-vpc (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_vpc.main-vpc (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.a_record (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_route53_record.a_record (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_lambda_permission.api-gateway-permission (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_lambda_permission.api-gateway-permission (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route_table.route-main (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_route_table.route-main (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_subnet.main-subnets (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_subnet.main-subnets (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_rest_api.rest-api (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_rest_api.rest-api (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_integration.lambda-root (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_integration.lambda-root (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "data.aws_route53_zone.root_zone" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_route53_record.a_record
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_route53_record.a_record" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.random serving random_string.random (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "random_string.random (prepare state)" (*terraform.NodeApplyableResource) needs provider.random
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_internet_gateway.main-gw (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_internet_gateway.main-gw (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_api_gateway_resource.proxy (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_api_gateway_resource.proxy (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_iam_role_policy_attachment.attach-role-policy (prepare state)
2021/04/02 17:59:12 [DEBUG] ProviderTransformer: "aws_iam_role_policy_attachment.attach-role-policy (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeApplyableResourceInstance
    provider.random - *terraform.NodeApplyableProvider
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2021/04/02 17:59:12 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
  local.api_gateway_domain - *terraform.NodeLocal
  local.api_gateway_stage_path - *terraform.NodeLocal
  local.cloudfront_origin_id - *terraform.NodeLocal
  output.api_fqdn - *terraform.NodeApplyableOutput
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
  output.lambda_function_arn - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeApplyableResourceInstance
    provider.random - *terraform.NodeApplyableProvider
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_subnet.main-subnets (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.lambda-function-sg (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.a_record (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.root_zone (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_internet_gateway.main-gw (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc_endpoint.s3_endpoint (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_permission.api-gateway-permission (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_rest_api.rest-api (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda-root (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_route53_zone.root_zone
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role.lambda-iam-role (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_deployment.api-gateway-deployment (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_resource.proxy (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_function.lambda-function (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_policy.ec2-lamdbda-handler (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table.route-main (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route53_record.a_record
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_distribution.api-gateway-distribution
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_vpc.main-vpc (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_iam_role_policy_attachment.attach-role-policy (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to random_string.random (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_integration.lambda (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_cloudfront_distribution.api-gateway-distribution (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.random
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_api_gateway_method.proxy-root (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_route_table_association.assoc-table-main (prepare state)
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to random_string.random
2021/04/02 17:59:12 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_lambda_function.lambda-function
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.aws_access_key" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.aws_region" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "local.api_fqdn" references: [var.domain]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "output.api_gateway_invoke_url" references: [aws_api_gateway_deployment.api-gateway-deployment (prepare state)]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_resource.proxy (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route_table.route-main (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record" references: [data.aws_route53_zone.root_zone (prepare state) data.aws_route53_zone.root_zone data.aws_route53_zone.root_zone aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution (prepare state) local.api_fqdn data.aws_route53_zone.root_zone (prepare state) data.aws_route53_zone.root_zone data.aws_route53_zone.root_zone aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution (prepare state) aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution (prepare state)]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.aws_az_names" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_iam_policy.ec2-lamdbda-handler (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.domain" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "local.cloudfront_origin_id" references: [random_string.random (prepare state) random_string.random random_string.random]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "output.api_fqdn" references: [local.api_fqdn]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution" references: [aws_api_gateway_deployment.api-gateway-deployment (prepare state) aws_cloudfront_cache_policy.auth-header-cache-policy aws_cloudfront_cache_policy.auth-header-cache-policy aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) local.api_fqdn var.api_stage local.cloudfront_origin_id local.api_gateway_stage_path local.api_gateway_domain aws_cloudfront_cache_policy.auth-header-cache-policy aws_cloudfront_cache_policy.auth-header-cache-policy aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) local.cloudfront_origin_id var.certificate_arn]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "random_string.random (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_cloudfront_distribution.api-gateway-distribution (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.api_secret_token" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.certificate_arn" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_vpc.main-vpc (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_iam_role_policy_attachment.attach-role-policy (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.aws_secret_key var.aws_region var.aws_access_key]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "provider.random" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "random_string.random" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_lambda_function.lambda-function" references: [aws_security_group.lambda-function-sg (prepare state) aws_iam_role.lambda-iam-role (prepare state) var.api_secret_token var.api_stage aws_security_group.lambda-function-sg (prepare state) aws_subnet.main-subnets (prepare state)]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.aws_secret_key" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_method.proxy-root (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route_table_association.assoc-table-main (prepare state)" references: [var.aws_az_names]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_route53_record.a_record (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "var.api_stage" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "local.api_gateway_stage_path" references: [var.api_stage]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_subnet.main-subnets (prepare state)" references: [var.aws_az_names]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_security_group.lambda-function-sg (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_lambda_permission.api-gateway-permission (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_rest_api.rest-api (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_integration.lambda-root (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "data.aws_route53_zone.root_zone" references: [aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution (prepare state) var.domain]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "output.cloudfront_hosted_zone_id" references: [aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution (prepare state)]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_internet_gateway.main-gw (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_vpc_endpoint.s3_endpoint (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "local.api_gateway_domain" references: [var.api_stage aws_api_gateway_deployment.api-gateway-deployment (prepare state)]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "output.lambda_function_arn" references: [aws_lambda_function.lambda-function (prepare state) aws_lambda_function.lambda-function aws_lambda_function.lambda-function]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "output.cloudfront_domain_name" references: [aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution aws_cloudfront_distribution.api-gateway-distribution (prepare state)]
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_iam_role.lambda-iam-role (prepare state)" references: []
2021/04/02 17:59:12 [DEBUG] ReferenceTransformer: "aws_api_gateway_deployment.api-gateway-deployment (prepare state)" references: []
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeApplyableResourceInstance
    provider.random - *terraform.NodeApplyableProvider
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021/04/02 17:59:12 [TRACE] AttachDependenciesTransformer: random_string.random depends on []
2021/04/02 17:59:12 [TRACE] AttachDependenciesTransformer: aws_lambda_function.lambda-function depends on [aws_iam_role.lambda-iam-role aws_security_group.lambda-function-sg aws_subnet.main-subnets]
2021/04/02 17:59:12 [TRACE] AttachDependenciesTransformer: aws_route53_record.a_record depends on [aws_api_gateway_deployment.api-gateway-deployment aws_cloudfront_cache_policy.auth-header-cache-policy aws_cloudfront_distribution.api-gateway-distribution random_string.random]
2021/04/02 17:59:12 [TRACE] AttachDependenciesTransformer: aws_cloudfront_cache_policy.auth-header-cache-policy depends on []
2021/04/02 17:59:12 [TRACE] AttachDependenciesTransformer: aws_cloudfront_distribution.api-gateway-distribution depends on [aws_api_gateway_deployment.api-gateway-deployment aws_cloudfront_cache_policy.auth-header-cache-policy random_string.random]
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.random - *terraform.NodeApplyableProvider
  random_string.random - *terraform.NodeApplyableResourceInstance
    provider.random - *terraform.NodeApplyableProvider
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random - *terraform.NodeApplyableResourceInstance
    provider.random - *terraform.NodeApplyableProvider
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.RootTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
    var.api_stage - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.domain - *terraform.NodeRootVariable
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
    provider.aws - *terraform.NodeApplyableProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_az_names - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
    var.certificate_arn - *terraform.NodeRootVariable
    var.domain - *terraform.NodeRootVariable
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    provider.random - *terraform.NodeApplyableProvider
    random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random - *terraform.NodeApplyableResourceInstance
    provider.random - *terraform.NodeApplyableProvider
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021/04/02 17:59:12 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
  aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_cache_policy.auth-header-cache-policy - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    local.api_fqdn - *terraform.NodeLocal
    local.api_gateway_domain - *terraform.NodeLocal
    local.api_gateway_stage_path - *terraform.NodeLocal
    local.cloudfront_origin_id - *terraform.NodeLocal
    var.certificate_arn - *terraform.NodeRootVariable
  aws_cloudfront_distribution.api-gateway-distribution (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_iam_role.lambda-iam-role (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    var.api_secret_token - *terraform.NodeRootVariable
    var.api_stage - *terraform.NodeRootVariable
  aws_lambda_function.lambda-function (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
  aws_route53_record.a_record (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_security_group.lambda-function-sg (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_subnet.main-subnets (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
    var.aws_az_names - *terraform.NodeRootVariable
  aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  data.aws_route53_zone.root_zone - *terraform.NodeApplyableResourceInstance
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
    data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
  data.aws_route53_zone.root_zone (prepare state) - *terraform.NodeApplyableResource
    provider.aws - *terraform.NodeApplyableProvider
  local.api_fqdn - *terraform.NodeLocal
    var.domain - *terraform.NodeRootVariable
  local.api_gateway_domain - *terraform.NodeLocal
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
    var.api_stage - *terraform.NodeRootVariable
  local.api_gateway_stage_path - *terraform.NodeLocal
    var.api_stage - *terraform.NodeRootVariable
  local.cloudfront_origin_id - *terraform.NodeLocal
    random_string.random - *terraform.NodeApplyableResourceInstance
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
    output.api_fqdn - *terraform.NodeApplyableOutput
    output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    output.lambda_function_arn - *terraform.NodeApplyableOutput
  output.api_fqdn - *terraform.NodeApplyableOutput
    local.api_fqdn - *terraform.NodeLocal
  output.api_gateway_invoke_url - *terraform.NodeApplyableOutput
    aws_api_gateway_deployment.api-gateway-deployment (prepare state) - *terraform.NodeApplyableResource
  output.cloudfront_domain_name - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
  output.cloudfront_hosted_zone_id - *terraform.NodeApplyableOutput
    aws_cloudfront_distribution.api-gateway-distribution - *terraform.NodeApplyableResourceInstance
  output.lambda_function_arn - *terraform.NodeApplyableOutput
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
  provider.aws - *terraform.NodeApplyableProvider
    var.aws_access_key - *terraform.NodeRootVariable
    var.aws_region - *terraform.NodeRootVariable
    var.aws_secret_key - *terraform.NodeRootVariable
  provider.aws (close) - *terraform.graphNodeCloseProvider
    aws_api_gateway_integration.lambda (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_integration.lambda-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_method.proxy-root (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_resource.proxy (prepare state) - *terraform.NodeApplyableResource
    aws_api_gateway_rest_api.rest-api (prepare state) - *terraform.NodeApplyableResource
    aws_iam_policy.ec2-lamdbda-handler (prepare state) - *terraform.NodeApplyableResource
    aws_iam_role_policy_attachment.attach-role-policy (prepare state) - *terraform.NodeApplyableResource
    aws_internet_gateway.main-gw (prepare state) - *terraform.NodeApplyableResource
    aws_lambda_function.lambda-function - *terraform.NodeApplyableResourceInstance
    aws_lambda_permission.api-gateway-permission (prepare state) - *terraform.NodeApplyableResource
    aws_route53_record.a_record - *terraform.NodeApplyableResourceInstance
    aws_route_table.route-main (prepare state) - *terraform.NodeApplyableResource
    aws_route_table_association.assoc-table-main (prepare state) - *terraform.NodeApplyableResource
    aws_vpc.main-vpc (prepare state) - *terraform.NodeApplyableResource
    aws_vpc_endpoint.s3_endpoint (prepare state) - *terraform.NodeApplyableResource
  provider.random - *terraform.NodeApplyableProvider
  provider.random (close) - *terraform.graphNodeCloseProvider
    random_string.random - *terraform.NodeApplyableResourceInstance
  random_string.random - *terraform.NodeApplyableResourceInstance
    random_string.random (prepare state) - *terraform.NodeApplyableResource
  random_string.random (prepare state) - *terraform.NodeApplyableResource
    provider.random - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.aws (close) - *terraform.graphNodeCloseProvider
    provider.random (close) - *terraform.graphNodeCloseProvider
  var.api_secret_token - *terraform.NodeRootVariable
  var.api_stage - *terraform.NodeRootVariable
  var.aws_access_key - *terraform.NodeRootVariable
  var.aws_az_names - *terraform.NodeRootVariable
  var.aws_region - *terraform.NodeRootVariable
  var.aws_secret_key - *terraform.NodeRootVariable
  var.certificate_arn - *terraform.NodeRootVariable
  var.domain - *terraform.NodeRootVariable
  ------
2021/04/02 17:59:12 [DEBUG] Starting graph walk: walkApply
2021/04/02 17:59:12 [TRACE] dag/walk: updating graph
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_iam_policy.ec2-lamdbda-handler (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_iam_role.lambda-iam-role (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.certificate_arn"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "provider.random (close)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "random_string.random (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "provider.random"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_subnet.main-subnets (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.aws_region"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_security_group.lambda-function-sg (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route_table.route-main (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "output.api_gateway_invoke_url"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_iam_role_policy_attachment.attach-role-policy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.api_secret_token"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_vpc_endpoint.s3_endpoint (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route53_record.a_record (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.domain"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda-root (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "local.cloudfront_origin_id"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.aws_secret_key"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.api_stage"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_lambda_function.lambda-function (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_vpc.main-vpc (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_deployment.api-gateway-deployment (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_route_table_association.assoc-table-main (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_internet_gateway.main-gw (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_resource.proxy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "output.cloudfront_domain_name"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_integration.lambda (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_method.proxy-root (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "random_string.random"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_lambda_permission.api-gateway-permission (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_api_gateway_rest_api.rest-api (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "local.api_gateway_stage_path"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "output.lambda_function_arn"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.aws_access_key"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "var.aws_az_names"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "data.aws_route53_zone.root_zone (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "local.api_gateway_domain"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "output.api_fqdn"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "aws_cloudfront_distribution.api-gateway-distribution (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "local.api_fqdn"
2021/04/02 17:59:12 [TRACE] dag/walk: added new vertex: "root"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_vpc_endpoint.s3_endpoint (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cloudfront_hosted_zone_id"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table_association.assoc-table-main (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "local.api_gateway_stage_path" waiting on "var.api_stage"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_deployment.api-gateway-deployment (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.lambda_function_arn"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "output.lambda_function_arn" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "output.cloudfront_domain_name" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_domain"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_api_gateway_integration.lambda-root (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_cache_policy.auth-header-cache-policy" waiting on "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_vpc.main-vpc (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_security_group.lambda-function-sg (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_lambda_function.lambda-function (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_gateway_stage_path"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main (prepare state)" waiting on "var.aws_az_names"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_api_gateway_resource.proxy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "output.cloudfront_hosted_zone_id" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_secret_token"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_api_gateway_method.proxy-root (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "data.aws_route53_zone.root_zone (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route_table_association.assoc-table-main (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "data.aws_route53_zone.root_zone" waiting on "data.aws_route53_zone.root_zone (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_iam_policy.ec2-lamdbda-handler (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_api_gateway_integration.lambda-root (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_vpc.main-vpc (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_iam_role.lambda-iam-role (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "local.api_gateway_domain" waiting on "var.api_stage"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.cloudfront_origin_id"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.cloudfront_domain_name"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_route53_record.a_record (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "local.cloudfront_origin_id" waiting on "random_string.random"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "random_string.random" waiting on "random_string.random (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_vpc.main-vpc (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "var.certificate_arn"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda-root (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_policy.ec2-lamdbda-handler (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_permission.api-gateway-permission (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy-root (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_api_gateway_rest_api.rest-api (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_route53_record.a_record" waiting on "aws_route53_record.a_record (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_region"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_route_table_association.assoc-table-main (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lambda_function.lambda-function"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_iam_role_policy_attachment.attach-role-policy (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_internet_gateway.main-gw (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.api_fqdn"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "provider.random (close)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_rest_api.rest-api (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "aws_cloudfront_distribution.api-gateway-distribution (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_role_policy_attachment.attach-role-policy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_internet_gateway.main-gw (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "output.api_gateway_invoke_url" waiting on "aws_api_gateway_deployment.api-gateway-deployment (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_route_table.route-main (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_subnet.main-subnets (prepare state)" waiting on "var.aws_az_names"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_iam_role.lambda-iam-role (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_api_gateway_resource.proxy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "var.api_stage"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "output.api_fqdn" waiting on "local.api_fqdn"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_secret_key"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "local.api_fqdn"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution" waiting on "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.random (close)" waiting on "random_string.random"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "local.api_gateway_domain" waiting on "aws_api_gateway_deployment.api-gateway-deployment (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_distribution.api-gateway-distribution (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_api_gateway_rest_api.rest-api (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_api_gateway_method.proxy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_lambda_permission.api-gateway-permission (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "random_string.random (prepare state)" waiting on "provider.random"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_api_gateway_method.proxy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_lambda_function.lambda-function" waiting on "aws_subnet.main-subnets (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route53_record.a_record"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_api_gateway_integration.lambda (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "data.aws_route53_zone.root_zone" waiting on "aws_cloudfront_distribution.api-gateway-distribution"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_api_gateway_integration.lambda (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.aws_access_key"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_integration.lambda (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_iam_role_policy_attachment.attach-role-policy (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_lambda_permission.api-gateway-permission (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_internet_gateway.main-gw (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_resource.proxy (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_security_group.lambda-function-sg (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_vpc_endpoint.s3_endpoint (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_api_gateway_method.proxy-root (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_route_table.route-main (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_api_gateway_method.proxy (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.api_gateway_invoke_url"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_route_table.route-main (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "local.api_fqdn" waiting on "var.domain"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_vpc_endpoint.s3_endpoint (prepare state)" waiting on "provider.aws"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_iam_policy.ec2-lamdbda-handler (prepare state)"
2021/04/02 17:59:12 [TRACE] dag/walk: added edge: "aws_route53_record.a_record" waiting on "data.aws_route53_zone.root_zone"
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_route53_record.a_record", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_subnet.main-subnets (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "output.api_gateway_invoke_url", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "random_string.random (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_internet_gateway.main-gw (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_deployment.api-gateway-deployment (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_iam_policy.ec2-lamdbda-handler (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_integration.lambda-root (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_iam_role_policy_attachment.attach-role-policy (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_distribution.api-gateway-distribution (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_vpc_endpoint.s3_endpoint (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "output.cloudfront_domain_name", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_vpc.main-vpc (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "local.cloudfront_origin_id", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_lambda_permission.api-gateway-permission (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy-root (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "local.api_gateway_domain", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_rest_api.rest-api (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_resource.proxy (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_security_group.lambda-function-sg (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_api_gateway_method.proxy (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "output.lambda_function_arn", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_route_table_association.assoc-table-main (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_lambda_function.lambda-function (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_iam_role.lambda-iam-role (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "provider.random (close)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_distribution.api-gateway-distribution", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "output.cloudfront_hosted_zone_id", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_route53_record.a_record (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "random_string.random", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_route_table.route-main (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "local.api_fqdn", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "local.api_gateway_stage_path", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_cache_policy.auth-header-cache-policy", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "data.aws_route53_zone.root_zone", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "output.api_fqdn", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_lambda_function.lambda-function", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "data.aws_route53_zone.root_zone (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: dependencies changed for "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)", sending new deps
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.domain"
2021/04/02 17:59:12 [TRACE] vertex "var.domain": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] vertex "var.domain": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.domain
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.domain
2021/04/02 17:59:12 [TRACE] vertex "var.domain": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.aws_access_key"
2021/04/02 17:59:12 [TRACE] vertex "var.aws_access_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] vertex "var.aws_access_key": evaluating
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "local.api_fqdn"
2021/04/02 17:59:12 [TRACE] vertex "local.api_fqdn": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.aws_access_key
2021/04/02 17:59:12 [TRACE] vertex "local.api_fqdn": evaluating
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.aws_az_names"
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: local.api_fqdn
2021/04/02 17:59:12 [TRACE] vertex "var.aws_az_names": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:12 [TRACE] vertex "var.aws_az_names": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.aws_az_names
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.aws_az_names
2021/04/02 17:59:12 [TRACE] vertex "var.aws_az_names": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.aws_secret_key"
2021/04/02 17:59:12 [TRACE] vertex "var.aws_secret_key": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] vertex "var.aws_secret_key": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.aws_secret_key
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.aws_secret_key
2021/04/02 17:59:12 [TRACE] vertex "var.aws_secret_key": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.api_stage"
2021/04/02 17:59:12 [TRACE] vertex "var.api_stage": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] vertex "var.api_stage": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.api_stage
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.api_stage
2021/04/02 17:59:12 [TRACE] vertex "var.api_stage": visit complete
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: local.api_fqdn
2021/04/02 17:59:12 [TRACE] vertex "local.api_fqdn": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "output.api_fqdn"
2021/04/02 17:59:12 [TRACE] vertex "output.api_fqdn": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:12 [TRACE] vertex "output.api_fqdn": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: output.api_fqdn
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "local.api_gateway_stage_path"
2021/04/02 17:59:12 [TRACE] vertex "local.api_gateway_stage_path": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:12 [TRACE] vertex "local.api_gateway_stage_path": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: local.api_gateway_stage_path
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving value for output.api_fqdn in state
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: local.api_gateway_stage_path
2021/04/02 17:59:12 [TRACE] vertex "local.api_gateway_stage_path": visit complete
2021/04/02 17:59:12 [TRACE] EvalWriteOutput: Saving Create change for output.api_fqdn in changeset
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: output.api_fqdn
2021/04/02 17:59:12 [TRACE] vertex "output.api_fqdn": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.certificate_arn"
2021/04/02 17:59:12 [TRACE] vertex "var.certificate_arn": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] vertex "var.certificate_arn": evaluating
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.aws_region"
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.certificate_arn
2021/04/02 17:59:12 [TRACE] vertex "var.aws_region": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.certificate_arn
2021/04/02 17:59:12 [TRACE] vertex "var.certificate_arn": visit complete
2021/04/02 17:59:12 [TRACE] vertex "var.aws_region": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.aws_region
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.aws_region
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "provider.random"
2021/04/02 17:59:12 [TRACE] vertex "provider.random": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:12 [TRACE] vertex "provider.random": evaluating
2021/04/02 17:59:12 [TRACE] vertex "var.aws_region": visit complete
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: provider.random
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "var.api_secret_token"
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] vertex "var.api_secret_token": starting visit (*terraform.NodeRootVariable)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.aws_access_key
2021/04/02 17:59:12 [TRACE] vertex "var.aws_access_key": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "provider.aws"
2021/04/02 17:59:12 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2021/04/02 17:59:12 [TRACE] vertex "provider.aws": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: provider.aws
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021-04-02T17:59:12.552-0300 [INFO]  plugin: configuring client automatic mTLS
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalInitProvider
2021/04/02 17:59:12 [TRACE] vertex "var.api_secret_token": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: var.api_secret_token
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: var.api_secret_token
2021/04/02 17:59:12 [TRACE] vertex "var.api_secret_token": visit complete
2021-04-02T17:59:12.576-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5]
2021-04-02T17:59:12.576-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112202
2021-04-02T17:59:12.576-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5
2021-04-02T17:59:12.616-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:12.616-0300
2021-04-02T17:59:12.660-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: plugin address: address=/tmp/plugin083761050 network=unix timestamp=2021-04-02T17:59:12.659-0300
2021-04-02T17:59:12.660-0300 [DEBUG] plugin: using plugin: version=5
2021/04/02 17:59:12 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/02 17:59:12 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2021/04/02 17:59:12 [TRACE] GRPCProvider: GetSchema
2021-04-02T17:59:12.710-0300 [INFO]  plugin: configuring client automatic mTLS
2021-04-02T17:59:12.710-0300 [TRACE] plugin.stdio: waiting for stdio data
2021-04-02T17:59:12.737-0300 [DEBUG] plugin: starting plugin: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 args=[/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5]
2021-04-02T17:59:12.737-0300 [DEBUG] plugin: plugin started: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112210
2021-04-02T17:59:12.737-0300 [DEBUG] plugin: waiting for RPC address: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5
2021-04-02T17:59:12.743-0300 [INFO]  plugin.terraform-provider-random_v3.1.0_x5: configuring server automatic mTLS: timestamp=2021-04-02T17:59:12.743-0300
2021-04-02T17:59:12.786-0300 [DEBUG] plugin: using plugin: version=5
2021-04-02T17:59:12.787-0300 [DEBUG] plugin.terraform-provider-random_v3.1.0_x5: plugin address: address=/tmp/plugin614362378 network=unix timestamp=2021-04-02T17:59:12.785-0300
2021/04/02 17:59:12 [TRACE] BuiltinEvalContext: Initialized "random" provider for provider.random
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2021/04/02 17:59:12 [TRACE] buildProviderConfig for provider.random: no configuration at all
2021/04/02 17:59:12 [TRACE] GRPCProvider: GetSchema
2021/04/02 17:59:12 [TRACE] GRPCProvider: Configure
2021-04-02T17:59:12.906-0300 [TRACE] plugin.stdio: waiting for stdio data
2021-04-02T17:59:12.907-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [INFO] AWS Auth provider used: "StaticProvider": timestamp=2021-04-02T17:59:12.907-0300
2021-04-02T17:59:12.908-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:12 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-02T17:59:12.907-0300
2021/04/02 17:59:12 [TRACE] GRPCProvider: Configure
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: provider.random
2021/04/02 17:59:12 [TRACE] vertex "provider.random": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "random_string.random (prepare state)"
2021/04/02 17:59:12 [TRACE] vertex "random_string.random (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:12 [TRACE] vertex "random_string.random (prepare state)": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: random_string.random (prepare state)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: random_string.random (prepare state)
2021/04/02 17:59:12 [TRACE] vertex "random_string.random (prepare state)": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "random_string.random"
2021/04/02 17:59:12 [TRACE] vertex "random_string.random": starting visit (*terraform.NodeApplyableResourceInstance)
2021/04/02 17:59:12 [TRACE] vertex "random_string.random": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/04/02 17:59:12 [TRACE] EvalReadDiff: Read Create change from plan for random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for random_string.random
2021/04/02 17:59:12 [TRACE] EvalReadState: no state present for random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/04/02 17:59:12 [TRACE] EvalReadDiff: Read Create change from plan for random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:12 [TRACE] Re-validating config for "random_string.random"
2021/04/02 17:59:12 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:12 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:12 [WARN] Provider "registry.terraform.io/-/random" produced an invalid plan for random_string.random, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .min_numeric: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_special: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .min_upper: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .upper: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .lower: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .min_lower: planned value cty.NumberIntVal(0) does not match config value cty.NullVal(cty.Number)
      - .number: planned value cty.True does not match config value cty.NullVal(cty.Bool)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/04/02 17:59:12 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:12 [TRACE] EvalReadState: reading state for random_string.random
2021/04/02 17:59:12 [TRACE] EvalReadState: no state present for random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:12 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalApply
2021/04/02 17:59:12 [DEBUG] random_string.random: applying the planned Create change
2021/04/02 17:59:12 [TRACE] GRPCProvider: ApplyResourceChange
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: recording 0 dependencies for random_string.random
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:12 [TRACE] EvalWriteState: recording 0 dependencies for random_string.random
2021/04/02 17:59:12 [TRACE] EvalWriteState: writing current state object for random_string.random
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2021/04/02 17:59:12 [TRACE] statemgr.Filesystem: creating backup snapshot at terraform.tfstate.backup
2021/04/02 17:59:12 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 29
2021/04/02 17:59:12 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: random_string.random
2021/04/02 17:59:12 [TRACE] vertex "random_string.random": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "local.cloudfront_origin_id"
2021/04/02 17:59:12 [TRACE] vertex "local.cloudfront_origin_id": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:12 [TRACE] vertex "local.cloudfront_origin_id": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: local.cloudfront_origin_id
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: local.cloudfront_origin_id
2021/04/02 17:59:12 [TRACE] vertex "local.cloudfront_origin_id": visit complete
2021/04/02 17:59:12 [TRACE] dag/walk: visiting "provider.random (close)"
2021/04/02 17:59:12 [TRACE] vertex "provider.random (close)": starting visit (*terraform.graphNodeCloseProvider)
2021/04/02 17:59:12 [TRACE] vertex "provider.random (close)": evaluating
2021/04/02 17:59:12 [TRACE] [walkApply] Entering eval tree: provider.random (close)
2021/04/02 17:59:12 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2021/04/02 17:59:12 [TRACE] GRPCProvider: Close
2021-04-02T17:59:12.940-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-random_v3.1.0_x5 pid=112210
2021-04-02T17:59:12.940-0300 [DEBUG] plugin: plugin exited
2021/04/02 17:59:12 [TRACE] [walkApply] Exiting eval tree: provider.random (close)
2021/04/02 17:59:12 [TRACE] vertex "provider.random (close)": visit complete
2021-04-02T17:59:12.941-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Canceled desc = context canceled"
2021-04-02T17:59:13.565-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:13 [DEBUG] Trying to get account information via sts:GetCallerIdentity: timestamp=2021-04-02T17:59:13.565-0300
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: provider.aws
2021/04/02 17:59:14 [TRACE] vertex "provider.aws": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_subnet.main-subnets (prepare state)"
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy-root (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_method.proxy-root (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_lambda_permission.api-gateway-permission (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_method.proxy-root (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_permission.api-gateway-permission (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_method.proxy-root (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_permission.api-gateway-permission (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_lambda_permission.api-gateway-permission (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_method.proxy-root (prepare state)
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_lambda_permission.api-gateway-permission (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_subnet.main-subnets (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_permission.api-gateway-permission (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "aws_subnet.main-subnets (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_subnet.main-subnets (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_vpc.main-vpc (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_vpc.main-vpc (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_vpc.main-vpc (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_vpc.main-vpc (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_vpc.main-vpc (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_vpc.main-vpc (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_resource.proxy (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_resource.proxy (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_resource.proxy (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_resource.proxy (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_resource.proxy (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_resource.proxy (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_vpc_endpoint.s3_endpoint (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_vpc_endpoint.s3_endpoint (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_vpc_endpoint.s3_endpoint (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_vpc_endpoint.s3_endpoint (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_subnet.main-subnets (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_subnet.main-subnets (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_cloudfront_distribution.api-gateway-distribution (prepare state)"
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_iam_role_policy_attachment.attach-role-policy (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_cloudfront_distribution.api-gateway-distribution (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda-root (prepare state)"
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_cloudfront_distribution.api-gateway-distribution (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_distribution.api-gateway-distribution (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_integration.lambda-root (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_integration.lambda-root (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_integration.lambda-root (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_integration.lambda-root (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_integration.lambda-root (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_deployment.api-gateway-deployment (prepare state)"
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_internet_gateway.main-gw (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_internet_gateway.main-gw (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] vertex "aws_internet_gateway.main-gw (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_deployment.api-gateway-deployment (prepare state)
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_internet_gateway.main-gw (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_internet_gateway.main-gw (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_internet_gateway.main-gw (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_route_table_association.assoc-table-main (prepare state)"
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_deployment.api-gateway-deployment (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_deployment.api-gateway-deployment (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "output.api_gateway_invoke_url"
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_integration.lambda (prepare state)"
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_integration.lambda (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_integration.lambda (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_integration.lambda (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_integration.lambda (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_integration.lambda (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": starting visit (*terraform.NodeApplyableResourceInstance)
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "local.api_gateway_domain"
2021/04/02 17:59:14 [TRACE] vertex "local.api_gateway_domain": starting visit (*terraform.NodeLocal)
2021/04/02 17:59:14 [TRACE] vertex "local.api_gateway_domain": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: local.api_gateway_domain
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalLocal
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "data.aws_route53_zone.root_zone (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "data.aws_route53_zone.root_zone (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "data.aws_route53_zone.root_zone (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: data.aws_route53_zone.root_zone (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: data.aws_route53_zone.root_zone (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "data.aws_route53_zone.root_zone (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_route_table.route-main (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_route_table.route-main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_route_table.route-main (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_route_table.route-main (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_route_table.route-main (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_route_table.route-main (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_route53_record.a_record (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_route53_record.a_record (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_route53_record.a_record (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_route53_record.a_record (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_route53_record.a_record (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_route53_record.a_record (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_iam_role.lambda-iam-role (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_role.lambda-iam-role (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_role.lambda-iam-role (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_iam_role.lambda-iam-role (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_iam_role.lambda-iam-role (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_role.lambda-iam-role (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_function.lambda-function (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_function.lambda-function (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_lambda_function.lambda-function (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_lambda_function.lambda-function (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_function.lambda-function (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_method.proxy (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_method.proxy (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_method.proxy (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_method.proxy (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_method.proxy (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_method.proxy (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: local.api_gateway_domain
2021/04/02 17:59:14 [TRACE] vertex "local.api_gateway_domain": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_security_group.lambda-function-sg (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_route_table_association.assoc-table-main (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_security_group.lambda-function-sg (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_route_table_association.assoc-table-main (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_route_table_association.assoc-table-main (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_api_gateway_rest_api.rest-api (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_rest_api.rest-api (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_rest_api.rest-api (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_api_gateway_rest_api.rest-api (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_api_gateway_rest_api.rest-api (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_rest_api.rest-api (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "aws_api_gateway_method.proxy-root (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_iam_role_policy_attachment.attach-role-policy (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_iam_role_policy_attachment.attach-role-policy (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_role_policy_attachment.attach-role-policy (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_iam_policy.ec2-lamdbda-handler (prepare state)"
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler (prepare state)": starting visit (*terraform.NodeApplyableResource)
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_iam_policy.ec2-lamdbda-handler (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_route_table_association.assoc-table-main (prepare state)
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_iam_policy.ec2-lamdbda-handler (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_route_table_association.assoc-table-main (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "aws_iam_policy.ec2-lamdbda-handler (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] vertex "output.api_gateway_invoke_url": starting visit (*terraform.NodeApplyableOutput)
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": evaluating
2021/04/02 17:59:14 [TRACE] vertex "output.api_gateway_invoke_url": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalOpFilter
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2021/04/02 17:59:14 [TRACE] vertex "aws_security_group.lambda-function-sg (prepare state)": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_security_group.lambda-function-sg (prepare state)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_security_group.lambda-function-sg (prepare state)
2021/04/02 17:59:14 [TRACE] vertex "aws_security_group.lambda-function-sg (prepare state)": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: visiting "aws_lambda_function.lambda-function"
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_function.lambda-function": starting visit (*terraform.NodeApplyableResourceInstance)
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_function.lambda-function": evaluating
2021/04/02 17:59:14 [TRACE] [walkApply] Entering eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:14 [TRACE] EvalWriteOutput: Saving value for output.api_gateway_invoke_url in state
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalSequence
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/04/02 17:59:14 [TRACE] EvalWriteOutput: Saving Create change for output.api_gateway_invoke_url in changeset
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/04/02 17:59:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:14 [TRACE] EvalReadState: reading state for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] EvalReadState: no state present for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/04/02 17:59:14 [TRACE] EvalReadDiff: Read Create change from plan for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:14 [TRACE] Re-validating config for "aws_cloudfront_cache_policy.auth-header-cache-policy"
2021/04/02 17:59:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: output.api_gateway_invoke_url
2021/04/02 17:59:14 [TRACE] vertex "output.api_gateway_invoke_url": visit complete
2021/04/02 17:59:14 [TRACE] EvalReadDiff: Read Update change from plan for aws_lambda_function.lambda-function
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:14 [TRACE] EvalReadState: reading state for aws_lambda_function.lambda-function
2021/04/02 17:59:14 [TRACE] UpgradeResourceState: schema version of aws_lambda_function.lambda-function is still 0; calling provider "registry.terraform.io/-/aws" for any other minor fixups
2021/04/02 17:59:14 [TRACE] GRPCProvider: UpgradeResourceState
2021-04-02T17:59:14.306-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:14 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:14.305-0300
2021-04-02T17:59:14.306-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:14 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:14.305-0300
2021-04-02T17:59:14.306-0300 [INFO]  plugin.terraform-provider-aws_v3.30.0_x5: 2021/04/02 17:59:14 [WARN] Truncating attribute path of 0 diagnostics for TypeSet: timestamp=2021-04-02T17:59:14.305-0300
2021/04/02 17:59:14 [TRACE] GRPCProvider: PlanResourceChange
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadDiff
2021/04/02 17:59:14 [TRACE] EvalReadDiff: Read Update change from plan for aws_lambda_function.lambda-function
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalDiff
2021/04/02 17:59:14 [WARN] Provider "registry.terraform.io/-/aws" produced an invalid plan for aws_cloudfront_cache_policy.auth-header-cache-policy, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .parameters_in_cache_key_and_forwarded_to_origin[0].query_strings_config[0].query_strings[0].items: planned value cty.NullVal(cty.Set(cty.String)) does not match config value cty.SetValEmpty(cty.String)
      - .parameters_in_cache_key_and_forwarded_to_origin[0].cookies_config[0].cookies[0].items: planned value cty.NullVal(cty.Set(cty.String)) does not match config value cty.SetValEmpty(cty.String)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2021/04/02 17:59:14 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalGetProvider
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReadState
2021/04/02 17:59:14 [TRACE] EvalReadState: reading state for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] EvalReadState: no state present for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: terraform.EvalNoop
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalApplyPre
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalApply
2021/04/02 17:59:14 [DEBUG] aws_cloudfront_cache_policy.auth-header-cache-policy: applying the planned Create change
2021/04/02 17:59:14 [TRACE] GRPCProvider: ApplyResourceChange
2021/04/02 17:59:14 [TRACE] Re-validating config for "aws_lambda_function.lambda-function"
2021/04/02 17:59:14 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: panic: interface conversion: interface {} is nil, not map[string]interface {}
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: goroutine 82 [running]:
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/terraform-providers/terraform-provider-aws/aws.expandCloudFrontCachePolicyCookiesConfig(0xc0011802a0, 0xc001180090)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-aws/aws/cloudfront_cache_policy_structure.go:34 +0x1e5
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/terraform-providers/terraform-provider-aws/aws.expandCloudFrontCachePolicyParametersConfig(0xc001180090, 0x68d4ee8)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-aws/aws/cloudfront_cache_policy_structure.go:112 +0xb2
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/terraform-providers/terraform-provider-aws/aws.expandCloudFrontCachePolicyConfig(0xc001152a00, 0xc001843718)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-aws/aws/cloudfront_cache_policy_structure.go:138 +0xb9
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/terraform-providers/terraform-provider-aws/aws.resourceAwsCloudFrontCachePolicyCreate(0xc001152a00, 0x5b2ab60, 0xc002058100, 0x3, 0xffffffffffffffff)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/src/github.com/hashicorp/terraform-provider-aws/aws/resource_aws_cloudfront_cache_policy.go:161 +0x55
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema.(*Resource).create(0xc000693440, 0x7268c08, 0xc001dbe800, 0xc001152a00, 0x5b2ab60, 0xc002058100, 0x0, 0x0, 0x0)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-sdk/v2@v2.4.4/helper/schema/resource.go:278 +0x88
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema.(*Resource).Apply(0xc000693440, 0x7268c08, 0xc001dbe800, 0xc001dc0700, 0xc001dc4e60, 0x5b2ab60, 0xc002058100, 0xc00182e1c8, 0x59672e0, 0xc0010090b0, ...)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-sdk/v2@v2.4.4/helper/schema/resource.go:396 +0x674
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema.(*GRPCProviderServer).ApplyResourceChange(0xc000344060, 0x7268c08, 0xc001dbe800, 0xc001dd7900, 0xc001dbe800, 0x6610640, 0xc001ddfd00)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-sdk/v2@v2.4.4/helper/schema/grpc_provider.go:955 +0x8ef
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/server.(*server).ApplyResourceChange(0xc000c6e1c0, 0x7268cb0, 0xc001dbe800, 0xc001dc04d0, 0xc000c6e1c0, 0xc001ddfdd0, 0xc001080ba0)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.2.1/tfprotov5/server/server.go:332 +0xb5
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: github.com/hashicorp/terraform-plugin-go/tfprotov5/internal/tfplugin5._Provider_ApplyResourceChange_Handler(0x6610640, 0xc000c6e1c0, 0x7268cb0, 0xc001ddfdd0, 0xc000e024e0, 0x0, 0x7268cb0, 0xc001ddfdd0, 0xc0000ec000, 0x382)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/github.com/hashicorp/terraform-plugin-go@v0.2.1/tfprotov5/internal/tfplugin5/tfplugin5_grpc.pb.go:380 +0x214
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: google.golang.org/grpc.(*Server).processUnaryRPC(0xc0002316c0, 0x7287698, 0xc000362d80, 0xc0017f2100, 0xc0010caf30, 0xa598ae0, 0x0, 0x0, 0x0)
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1194 +0x52b
2021-04-02T17:59:14.321-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: google.golang.org/grpc.(*Server).handleStream(0xc0002316c0, 0x7287698, 0xc000362d80, 0xc0017f2100, 0x0)
2021-04-02T17:59:14.322-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:1517 +0xd0c
2021-04-02T17:59:14.322-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: google.golang.org/grpc.(*Server).serveStreams.func1.2(0xc00032ea40, 0xc0002316c0, 0x7287698, 0xc000362d80, 0xc0017f2100)
2021-04-02T17:59:14.322-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:859 +0xab
2021-04-02T17:59:14.322-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: created by google.golang.org/grpc.(*Server).serveStreams.func1
2021-04-02T17:59:14.322-0300 [DEBUG] plugin.terraform-provider-aws_v3.30.0_x5: 	/opt/teamcity-agent/work/5d79fe75d4460a2f/pkg/mod/google.golang.org/grpc@v1.32.0/server.go:857 +0x1fd
2021-04-02T17:59:14.324-0300 [WARN]  plugin.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-04-02T17:59:14.324-0300 [DEBUG] plugin: plugin process exited: path=/home/julio/Documentos/lambda-api-aws/terraform/.terraform/plugins/linux_amd64/terraform-provider-aws_v3.30.0_x5 pid=112202 error="exit status 2"
2021/04/02 17:59:14 [ERROR] <root>: eval: *terraform.EvalDiff, err: rpc error: code = Unavailable desc = transport is closing
2021/04/02 17:59:14 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_lambda_function.lambda-function
2021/04/02 17:59:14 [TRACE] vertex "aws_lambda_function.lambda-function": visit complete
2021/04/02 17:59:14 [DEBUG] aws_cloudfront_cache_policy.auth-header-cache-policy: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/04/02 17:59:14 [TRACE] EvalMaybeTainted: aws_cloudfront_cache_policy.auth-header-cache-policy encountered an error during creation, so it is now marked as tainted
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "output.lambda_function_arn" errored, so skipping
2021/04/02 17:59:14 [TRACE] EvalWriteState: removing state object for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2021/04/02 17:59:14 [TRACE] EvalApplyProvisioners: aws_cloudfront_cache_policy.auth-header-cache-policy has no state, so skipping provisioners
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2021/04/02 17:59:14 [TRACE] EvalMaybeTainted: aws_cloudfront_cache_policy.auth-header-cache-policy encountered an error during creation, so it is now marked as tainted
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteState
2021/04/02 17:59:14 [TRACE] EvalWriteState: removing state object for aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalIf
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2021/04/02 17:59:14 [TRACE] <root>: eval: *terraform.EvalApplyPost
2021/04/02 17:59:14 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2021/04/02 17:59:14 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2021/04/02 17:59:14 [TRACE] [walkApply] Exiting eval tree: aws_cloudfront_cache_policy.auth-header-cache-policy
2021/04/02 17:59:14 [TRACE] vertex "aws_cloudfront_cache_policy.auth-header-cache-policy": visit complete
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "aws_cloudfront_distribution.api-gateway-distribution" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "output.cloudfront_domain_name" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "output.cloudfront_hosted_zone_id" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "data.aws_route53_zone.root_zone" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "aws_route53_record.a_record" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "provider.aws (close)" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2021/04/02 17:59:14 [TRACE] dag/walk: upstream of "root" errored, so skipping
2021/04/02 17:59:14 [TRACE] statemgr.Filesystem: have already backed up original terraform.tfstate to terraform.tfstate.backup on a previous write
2021/04/02 17:59:14 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 30
2021/04/02 17:59:14 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2021/04/02 17:59:14 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2021/04/02 17:59:14 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2021-04-02T17:59:14.327-0300 [DEBUG] plugin: plugin exited
